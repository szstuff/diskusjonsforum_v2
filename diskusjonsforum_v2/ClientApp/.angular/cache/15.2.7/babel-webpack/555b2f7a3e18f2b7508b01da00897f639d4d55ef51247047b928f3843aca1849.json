{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./threads.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a1) {\n  return [\"/thread-view\", a1];\n};\nfunction ThreadsComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 11)(2, \"div\", 12)(3, \"div\")(4, \"p\", 13)(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \" posted on \");\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(11, \"hr\");\n    i0.ɵɵelementStart(12, \"p\", 14)(13, \"b\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"p\", 15);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"p\", 16);\n    i0.ɵɵelement(18, \"img\", 17);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const thread_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, thread_r1.threadId));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(thread_r1.createdBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 6, thread_r1.threadCreatedAt, \"yyyy-MM-dd HH:mm\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(thread_r1.threadTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(thread_r1.threadBody);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", thread_r1.threadComments == null ? null : thread_r1.threadComments.length, \"\");\n  }\n}\nexport class ThreadsComponent {\n  // calls on the filtered list\n  get listFilter() {\n    return this._listFilter;\n  }\n  // filters the threads depending on the \"value\" and updates the list\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredThreads = this.performFilter(value);\n  }\n  // initialises routes and service for the constructor\n  constructor(_threadService, _http, _router, route) {\n    this._threadService = _threadService;\n    this._http = _http;\n    this._router = _router;\n    this.route = route;\n    this.viewTitle = 'Table';\n    this.threads = [];\n    this._listFilter = '';\n    // stores the filtered list in an array\n    this.filteredThreads = this.threads;\n  }\n  // retrieves the threads by calling on the service and updates the list to display the threads\n  getThreads() {\n    // calls getThreads of the _threadService\n    this._threadService.getThreads().subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.threads = data;\n      this.filteredThreads = this.threads;\n    }, error => {\n      console.error('Error getting threads', error);\n      // Handle the error, e.g., display an error message to the user\n      // For now, let's log a generic error message to the console\n      console.error('An error occurred while fetching threads. Please try again later.');\n    });\n  }\n  // converts the string to lowercase and returns the l\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.threads.filter(thread => thread.threadTitle.toLocaleLowerCase().includes(filterBy));\n  }\n  navigateToThreadform() {\n    this._router.navigate(['/threadForm']); // navigates to the thread form\n  }\n\n  navigateToHome() {\n    this._router.navigate(['/home']);\n  }\n  ngOnInit() {\n    console.log('ThreadsComponent created'); // logs to the console that threadscomponent has been created\n    this.getThreads(); // refreshes\n  }\n  // updates the threads and logs it in the console by calling on updateThread from threads service\n  update(thread) {\n    this._threadService.updateThread(thread).subscribe(() => {\n      console.log('Thread updated');\n    }, error => {\n      console.error('Error updating thread', error);\n    });\n  }\n  // deleting a thread and logs it to the console. after deleting, the website refreshes with the nondeleted threads\n  // deletes by calling on deleteThread from the service\n  delete(threadId) {\n    this._threadService.deleteThread(threadId).subscribe(() => {\n      console.log('Thread deleted');\n      this.getThreads();\n    }, error => {\n      console.error('Error deleting thread', error);\n    });\n  }\n}\nThreadsComponent.ɵfac = function ThreadsComponent_Factory(t) {\n  return new (t || ThreadsComponent)(i0.ɵɵdirectiveInject(i1.ThreadService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadsComponent,\n  selectors: [[\"app-thread-component\"]],\n  decls: 13,\n  vars: 2,\n  consts: [[1, \"tabelLabel\", \"text-white\"], [1, \"container\", \"thread-table-container\"], [1, \"row\"], [1, \"col-7\"], [\"type\", \"text\", \"placeholder\", \"Filter by title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-3\"], [1, \"btn\", \"btn-primary\", \"submit\", 3, \"click\"], [1, \"col-sm-1\"], [1, \"table-change\", 3, \"click\"], [\"src\", \"../../assets/images/icons8-grid-48.png\", \"alt\", \"...\", \"height\", \"40\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"], [1, \"post\"], [1, \"thread-information\"], [1, \"title-thread\"], [1, \"thread-text\"], [1, \"comment-count\"], [\"src\", \"../../assets/images/message-detail-regular-24.png\", \"alt\", \"...\", \"height\", \"20\"]],\n  template: function ThreadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Explore discussions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ThreadsComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ThreadsComponent_Template_button_click_7_listener() {\n        return ctx.navigateToThreadform();\n      });\n      i0.ɵɵtext(8, \"Create New Thread\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ThreadsComponent_Template_button_click_10_listener() {\n        return ctx.navigateToHome();\n      });\n      i0.ɵɵelement(11, \"img\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(12, ThreadsComponent_div_12_Template, 20, 11, \"div\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredThreads);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i3.RouterLink, i4.DatePipe],\n  styles: [\".post[_ngcontent-%COMP%] {\\r\\n  background-color: rgba(255, 255, 255, 0.9);\\r\\n  border-radius: 7px;\\r\\n  padding: 1.25em;\\r\\n  margin: 20px;\\r\\n  margin-bottom: 40px;\\r\\n\\r\\n  color: #002c45;\\r\\n  box-shadow: 3px 4px 5px 0px rgba(0, 0, 0, 0.38);\\r\\n  transition: 300ms ease; \\r\\n}\\r\\n\\r\\n  .post[_ngcontent-%COMP%]:hover {\\r\\n\\r\\n    transform: scale(1.1);\\r\\n\\r\\n  }\\r\\n\\r\\n.thread-table-container[_ngcontent-%COMP%] {\\r\\n    max-width: 1000px;\\r\\n}\\r\\n\\r\\n.category[_ngcontent-%COMP%] {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\na[_ngcontent-%COMP%]{\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.recent-posts-title[_ngcontent-%COMP%], .tabelLabel[_ngcontent-%COMP%] {\\r\\n  font-size: 40px;\\r\\n  text-align: center;\\r\\n  padding: 50px 0 20px 0;\\r\\n}\\r\\n\\r\\n.table-change[_ngcontent-%COMP%] {\\r\\n  height: auto;\\r\\n  margin: 20px;\\r\\n  width: auto;\\r\\n  margin-left: 15%;\\r\\n  border: none;\\r\\n  border-radius: 1px;\\r\\n  outline: none;\\r\\n  \\r\\n  background-color: transparent;\\r\\n  cursor: pointer;\\r\\n  transition: 300ms ease; \\r\\n}\\r\\n\\r\\n  .table-change[_ngcontent-%COMP%]:hover {\\r\\n    \\r\\n    \\r\\n    transform: rotate(180deg);\\r\\n  }\\r\\n\\r\\n  .table-change[_ngcontent-%COMP%]:hover:after {\\r\\n\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9jc3MvSW5kZXhTdHlsZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQ0FBMEM7RUFDMUMsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOzRCQUM0QjtFQUMxQixjQUFjO0VBQ2QsK0NBQStDO0VBQy9DLHNCQUFzQixFQUFFLGNBQWM7QUFDeEM7O0VBRUU7QUFDRjsrQkFDK0I7SUFDM0IscUJBQXFCO0FBQ3pCLDJCQUEyQjtFQUN6Qjs7QUFFRjtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixlQUFlO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtFQUNaLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsMENBQTBDO0VBQzFDLDZCQUE2QjtFQUM3QixlQUFlO0VBQ2Ysc0JBQXNCLEVBQUUsY0FBYztBQUN4Qzs7RUFFRTtJQUNFLGtDQUFrQztJQUNsQywwQ0FBMEMsQ0FBQztvREFDSztJQUNoRCx5QkFBeUI7RUFDM0I7O0VBRUE7O0VBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIucG9zdCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDdweDtcclxuICBwYWRkaW5nOiAxLjI1ZW07XHJcbiAgbWFyZ2luOiAyMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbi8qICBtYXJnaW46IDIwcHggYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiA0MHB4IGF1dG87Ki9cclxuICBjb2xvcjogIzAwMmM0NTtcclxuICBib3gtc2hhZG93OiAzcHggNHB4IDVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjM4KTtcclxuICB0cmFuc2l0aW9uOiAzMDBtcyBlYXNlOyAvKiBBbmltYXRpb24gKi9cclxufVxyXG5cclxuICAucG9zdDpob3ZlciB7XHJcbi8qICAgIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMS4yKTsqL1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xyXG4vKiAgICB0cmFuc2l0aW9uOiAxcyBlYXNlOyovXHJcbiAgfVxyXG5cclxuLnRocmVhZC10YWJsZS1jb250YWluZXIge1xyXG4gICAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbn1cclxuXHJcbi5jYXRlZ29yeSB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmF7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5yZWNlbnQtcG9zdHMtdGl0bGUsIC50YWJlbExhYmVsIHtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDUwcHggMCAyMHB4IDA7XHJcbn1cclxuXHJcbi50YWJsZS1jaGFuZ2Uge1xyXG4gIGhlaWdodDogYXV0bztcclxuICBtYXJnaW46IDIwcHg7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgbWFyZ2luLWxlZnQ6IDE1JTtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogMXB4O1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgLypiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDQ0LCA2OSwgMC45KTsqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICB0cmFuc2l0aW9uOiAzMDBtcyBlYXNlOyAvKiBBbmltYXRpb24gKi9cclxufVxyXG5cclxuICAudGFibGUtY2hhbmdlOmhvdmVyIHtcclxuICAgIC8qYmFja2dyb3VuZDogcmdiKDAsIDQ0LCA2OSwgMDcpOyovXHJcbiAgICAvKmJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgNDQsIDY5LCAwLjkpOyovLypcclxuICAgIGJveC1zaGFkb3c6IDFweCA1cHggN3B4IDFweCByZ2JhKDAsIDAsIDAsIDAuMik7Ki9cclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgfVxyXG5cclxuICAudGFibGUtY2hhbmdlOmhvdmVyOmFmdGVyIHtcclxuXHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\", \".comments-heading[_ngcontent-%COMP%] {\\r\\n    \\r\\n    font-size: 25px;\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n\\r\\n.thread-information[_ngcontent-%COMP%] {\\r\\n    \\r\\n    font-weight: 300;\\r\\n    font-size: 13px;\\r\\n}\\r\\n\\r\\n\\r\\n.comment-button[_ngcontent-%COMP%] {\\r\\n    font-size: 14px;\\r\\n    font-weight: 700;\\r\\n    color: #feeeef;\\r\\n    height: 33px;\\r\\n    width: 70%;\\r\\n    border: 2px outset #288155;\\r\\n    border-radius: 30px;\\r\\n    outline: none;\\r\\n    background: #288155;\\r\\n    cursor: pointer;\\r\\n    transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n\\r\\n.comment-button[_ngcontent-%COMP%]:hover {\\r\\n    \\r\\n    background: rgba(40, 129, 85, 0.8);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n\\r\\n\\r\\n.btncost[_ngcontent-%COMP%]{\\r\\n\\r\\n    background-color: mediumpurple;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.btncost[_ngcontent-%COMP%]:hover{\\r\\n    color: white;\\r\\n    background-color: #ffc942 ;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n.row[_ngcontent-%COMP%] {\\r\\n    margin-top: 4%;\\r\\n}\\r\\n\\r\\n.todays-discussion[_ngcontent-%COMP%] {\\r\\n    justify-content: start;\\r\\n    color: #feeeef;\\r\\n    font-size: 1.75rem;\\r\\n    font-weight: 700;\\r\\n    padding-left: 25px;\\r\\n    padding-bottom: 20px;\\r\\n}\\r\\n\\r\\n.title-categories[_ngcontent-%COMP%] {\\r\\n    padding-left: 5px;\\r\\n    color: #feeeef;\\r\\n    font-size: 1.75rem;\\r\\n    font-weight: 700;\\r\\n}\\r\\n\\r\\n.list-group[_ngcontent-%COMP%] {\\r\\n    border-radius: 30px;\\r\\n    margin-top: 28px;\\r\\n}\\r\\n\\r\\n\\r\\n.list-group-item[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    background: #feeeef;\\r\\n    border: none;\\r\\n    height: 46px;\\r\\n    width: 200px;\\r\\n    color: #feeeef;\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n\\r\\n.title-thread[_ngcontent-%COMP%] {\\r\\n    color: #002c45;\\r\\n    text-decoration: none;\\r\\n    font-weight: 400;\\r\\n    font-size: 1.25em;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.user-id[_ngcontent-%COMP%] {\\r\\n    font-weight: 400;\\r\\n    color: #002c45;\\r\\n}\\r\\n\\r\\n\\r\\n.thread-text[_ngcontent-%COMP%] {\\r\\n    color: #002c45;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n\\r\\n.comment-count[_ngcontent-%COMP%] {\\r\\n  color: #002c45;\\r\\n  font-size: 0.9em;\\r\\n}\\r\\n\\r\\n\\r\\n.thread-container[_ngcontent-%COMP%] {\\r\\n    overflow: hidden;\\r\\n    border: 3px #feeeef;\\r\\n    border-radius: 30px;\\r\\n    padding-left: 20px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.custom-container[_ngcontent-%COMP%] {\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n\\r\\n.btn-secondary[_ngcontent-%COMP%] {\\r\\n    color: white;\\r\\n    background-color: #ffc942;\\r\\n    border: transparent;\\r\\n}\\r\\n\\r\\n.btn-secondary[_ngcontent-%COMP%]:hover {\\r\\n    color: white;\\r\\n    background-color: #ff9fc5;\\r\\n}\\r\\n\\r\\n.top_btn[_ngcontent-%COMP%] {\\r\\n    position: fixed; \\r\\n    bottom: 20px; \\r\\n    right: 30px; \\r\\n    z-index: 99; \\r\\n    border: none; \\r\\n    outline: none; \\r\\n    background: none; \\r\\n    color: #002c45; \\r\\n    cursor: pointer; \\r\\n    transition: .3s ease-in-out;\\r\\n    padding: 15px; \\r\\n    border-radius: 30px; \\r\\n    font-size: 18px; \\r\\n    font-weight: 700;\\r\\n    align-items: center;\\r\\n    width: auto;\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.top_btn[_ngcontent-%COMP%]:hover {\\r\\n     \\r\\n    \\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n.category-container[_ngcontent-%COMP%] {\\r\\n    left: 8%;\\r\\n    margin-top: 9.3%;\\r\\n}\\r\\n\\r\\n\\r\\n.button-new-thread[_ngcontent-%COMP%] {\\r\\n    left: 76%;\\r\\n    margin-top: 12%; \\r\\n}\\r\\n\\r\\n\\r\\n.start-new-thread[_ngcontent-%COMP%] {\\r\\n    color: #feeeef;\\r\\n    font-weight:400;\\r\\n}\\r\\n\\r\\n\\r\\n.button-container[_ngcontent-%COMP%] {\\r\\n    display: none; \\r\\n}\\r\\n\\r\\n@media (max-width: 991px) {\\r\\n    .category-container[_ngcontent-%COMP%] {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .button-new-thread[_ngcontent-%COMP%] {\\r\\n        display: none;\\r\\n    }\\r\\n\\r\\n    .button-container[_ngcontent-%COMP%] {\\r\\n        display: block; \\r\\n        text-align: center; \\r\\n        margin-top: 20px; \\r\\n    }\\r\\n\\r\\n    .col-md-6[_ngcontent-%COMP%] {\\r\\n        width: 100%; \\r\\n    }\\r\\n}\\r\\n\\r\\n@media (min-width: 992px) and (max-width: 1199px) {\\r\\n    .col-md-6[_ngcontent-%COMP%] {\\r\\n        width: 600px; \\r\\n    }\\r\\n\\r\\n    .container-fluid[_ngcontent-%COMP%] {\\r\\n        margin-top: 50px;\\r\\n    }\\r\\n}\\r\\n\\r\\n.submit[_ngcontent-%COMP%] {\\r\\n  font-size: 18px;\\r\\n  font-weight: 700;\\r\\n  \\r\\n  color: white;\\r\\n  height: 45px;\\r\\n  margin: 20px;\\r\\n  width: 90%;\\r\\n  margin-left: 15%;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  background-color: rgba(0, 44, 69, 0.9);\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .submit[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(0, 44, 69, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n.form-control[_ngcontent-%COMP%] {\\r\\n  color: #002c45;\\r\\n  background: rgba(255, 255, 255, 0.6);\\r\\n  height: 47px;\\r\\n  width: 100%;\\r\\n  margin:20px;\\r\\n  padding: 0 10px 0 20px;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .form-control[_ngcontent-%COMP%]:hover {\\r\\n    background: rgba(255, 255, 255, 0.8);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n    border: none;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ThreadsComponent","listFilter","_listFilter","value","console","log","filteredThreads","performFilter","constructor","_threadService","_http","_router","route","threads","getThreads","subscribe","data","JSON","stringify","error","filterBy","toLocaleLowerCase","filter","thread","threadTitle","includes","navigateToThreadform","navigate","navigateToHome","ngOnInit","update","updateThread","delete","threadId","deleteThread","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.html","C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.ts"],"sourcesContent":["<h1 class=\"tabelLabel text-white\">Explore discussions</h1>\r\n\r\n<div class=\"container thread-table-container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-7\">\r\n      <input class=\"form-control\" type=\"text\" placeholder=\"Filter by title\" [(ngModel)]=\"listFilter\" />\r\n    </div>\r\n    <div class=\"col-sm-3\">\r\n      <button class=\"btn btn-primary submit\" (click)=\"navigateToThreadform()\">Create New Thread</button>\r\n    </div>\r\n    <div class=\"col-sm-1\">\r\n      <button class=\"table-change\" (click)=\"navigateToHome()\">\r\n        <img src=\"../../assets/images/icons8-grid-48.png\" alt=\"...\" height=\"40\" />\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div *ngFor=\"let thread of filteredThreads\">\r\n    <a [routerLink]=\"['/thread-view', thread.threadId]\">\r\n      <div class=\"post\">\r\n        <div>\r\n          <p class=\"thread-information\">\r\n            <b>{{ thread.createdBy }}</b> posted on\r\n            <b>{{ thread.threadCreatedAt | date: 'yyyy-MM-dd HH:mm' }}</b>\r\n          </p>\r\n          <hr />\r\n          <p class=\"title-thread\"><b>{{ thread.threadTitle }}</b></p>\r\n          <p class=\"thread-text\">{{ thread.threadBody }}</p>\r\n          <p class=\"comment-count\"><img src=\"../../assets/images/message-detail-regular-24.png\" alt=\"...\" height=\"20\" />\r\n            {{ thread.threadComments?.length }}</p>\r\n        </div>\r\n      </div>\r\n    </a>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Thread } from './threads';\r\nimport { ThreadService } from \"./threads.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-thread-component',\r\n  templateUrl: './threads.component.html', // path to the HTML file structure\r\n  styleUrls: ['../../css/IndexStyle.css','../../css/thread_table.css'] // path to the css file\r\n})\r\n\r\nexport class ThreadsComponent implements OnInit {\r\n  viewTitle: string = 'Table';\r\n  threads: Thread[] = [];\r\n  private _listFilter: string = '';\r\n\r\n  // calls on the filtered list\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  // filters the threads depending on the \"value\" and updates the list\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    console.log('In setter:', value);\r\n    this.filteredThreads = this.performFilter(value);\r\n  }\r\n  // stores the filtered list in an array\r\n  filteredThreads: Thread[] = this.threads;\r\n\r\n  // initialises routes and service for the constructor\r\n  constructor(\r\n    private _threadService: ThreadService,\r\n    private _http: HttpClient,\r\n    private _router: Router,\r\n    private route: ActivatedRoute) { }\r\n // retrieves the threads by calling on the service and updates the list to display the threads\r\n  getThreads(): void {\r\n    // calls getThreads of the _threadService\r\n    this._threadService.getThreads()\r\n      .subscribe(data => {\r\n        console.log('All', JSON.stringify(data));\r\n        this.threads = data;\r\n        this.filteredThreads = this.threads;\r\n      },\r\n      (error) => {\r\n        console.error('Error getting threads', error);\r\n        // Handle the error, e.g., display an error message to the user\r\n        // For now, let's log a generic error message to the console\r\n        console.error('An error occurred while fetching threads. Please try again later.');\r\n      }\r\n    );\r\n  }\r\n\r\n  // converts the string to lowercase and returns the l\r\n  performFilter(filterBy: string): Thread[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.threads.filter((thread: Thread) =>\r\n      thread.threadTitle.toLocaleLowerCase().includes(filterBy)\r\n    );\r\n  }\r\n\r\n  navigateToThreadform(){\r\n    this._router.navigate(['/threadForm']); // navigates to the thread form\r\n  }\r\n\r\n  navigateToHome() {\r\n    this._router.navigate(['/home']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('ThreadsComponent created'); // logs to the console that threadscomponent has been created\r\n    this.getThreads(); // refreshes\r\n  }\r\n\r\n  // updates the threads and logs it in the console by calling on updateThread from threads service\r\n  update(thread: Thread): void {\r\n    this._threadService.updateThread(thread).subscribe(\r\n      ()=>{\r\n        console.log('Thread updated');\r\n      },\r\n      (error) =>{\r\n        console.error('Error updating thread', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // deleting a thread and logs it to the console. after deleting, the website refreshes with the nondeleted threads\r\n  // deletes by calling on deleteThread from the service\r\n  delete(threadId: number): void{\r\n    this._threadService.deleteThread(threadId).subscribe(\r\n      ()=>{\r\n        console.log('Thread deleted');\r\n        this.getThreads();\r\n      },\r\n      (error) => {\r\n        console.error('Error deleting thread', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}