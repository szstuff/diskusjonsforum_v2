{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./comments.service\";\nimport * as i4 from \"@angular/common/http\";\nexport class CommentformComponent {\n  constructor(_formBuilder, _router, _commentService, _http) {\n    this._formBuilder = _formBuilder;\n    this._router = _router;\n    this._commentService = _commentService;\n    this._http = _http;\n    this.commentForm = _formBuilder.group({\n      comment: [\"\", Validators.required],\n      body: [\"\", Validators.required]\n    });\n  }\n  onSumbit() {\n    console.log(\"CommentCreate form submitted:\");\n    console.log(this.commentForm);\n    const newComment = this.commentForm.value;\n    this._commentService.createComment(newComment).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        this._router.navigate([\"/comments\"]);\n      } else {\n        console.log(\"Comment failed\");\n      }\n    });\n  }\n  backToComment() {\n    this._router.navigate([\"/comments\"]);\n  }\n}\nCommentformComponent.ɵfac = function CommentformComponent_Factory(t) {\n  return new (t || CommentformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CommentsService), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nCommentformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentformComponent,\n  selectors: [[\"app-comments-commentform\"]],\n  decls: 4,\n  vars: 0,\n  consts: [[\"id\", \"tabelLabel\"]],\n  template: function CommentformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"List of Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \" not implemented \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAA6EA,UAAU,QAAO,gBAAgB;;;;;;AAU9G,OAAM,MAAOC,oBAAoB;EAG/BC,YACUC,YAAyB,EACzBC,OAAe,EACfC,eAAgC,EAChCC,KAAiB;IAHjB,iBAAY,GAAZH,YAAY;IACZ,YAAO,GAAPC,OAAO;IACP,oBAAe,GAAfC,eAAe;IACf,UAAK,GAALC,KAAK;IAGb,IAAI,CAACC,WAAW,GAAGJ,YAAY,CAACK,KAAK,CAAC;MACpCC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAClCC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ;KAC/B,CAAC;EACJ;EAEAE,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5CD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,WAAW,CAAC;IAC7B,MAAMQ,UAAU,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK;IACzC,IAAI,CAACX,eAAe,CAACY,aAAa,CAACF,UAAU,CAAC,CAACG,SAAS,CAACC,QAAQ,IAAG;MAClE,IAAIA,QAAQ,CAACC,OAAO,EAAC;QACnBP,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACE,OAAO,CAAC;QAC7B,IAAI,CAACjB,OAAO,CAACkB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACrC,MACI;QACHT,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;IAEjC,CAAC,CAAC;EACJ;EAEAS,aAAa;IACX,IAAI,CAACnB,OAAO,CAACkB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;EACtC;;AAjCWrB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXjCC,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MACzCA,yBAAG;MAACA,iCAAgB;MAAAA,iBAAI","names":["Validators","CommentformComponent","constructor","_formBuilder","_router","_commentService","_http","commentForm","group","comment","required","body","onSumbit","console","log","newComment","value","createComment","subscribe","response","success","message","navigate","backToComment","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\commentform.component.ts","C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\comments.component.html"],"sourcesContent":["import {Component} from \"@angular/core\";\r\nimport {FormGroup, FormControl, Validator, FormBuilder, ReactiveFormsModule, Validators} from \"@angular/forms\";\r\nimport { Router} from \"@angular/router\";\r\nimport { CommentsService} from \"./comments.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"app-comments-commentform\",\r\n  templateUrl: \"./comments.component.html\"\r\n})\r\n\r\nexport class CommentformComponent{\r\n  commentForm: FormGroup;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _commentService: CommentsService,\r\n    private _http: HttpClient\r\n  )\r\n  {\r\n    this.commentForm = _formBuilder.group({\r\n      comment: [\"\", Validators.required],\r\n      body: [\"\", Validators.required]\r\n    });\r\n  }\r\n\r\n  onSumbit() {\r\n    console.log(\"CommentCreate form submitted:\");\r\n    console.log(this.commentForm);\r\n    const newComment = this.commentForm.value;\r\n    this._commentService.createComment(newComment).subscribe(response => {\r\n      if (response.success){\r\n        console.log(response.message);\r\n        this._router.navigate([\"/comments\"]);\r\n      }\r\n      else {\r\n        console.log(\"Comment failed\");\r\n      }\r\n    })\r\n  };\r\n\r\n  backToComment(){\r\n    this._router.navigate([\"/comments\"]);\r\n  }\r\n\r\n}\r\n","<h2 id=\"tabelLabel\">List of Comments</h2>\r\n<p> not implemented </p>\r\n<!--\r\n<table>\r\n  <tr *ngFor=\"let comment of comments\">\r\n    <p><strong>{{ comment.User.UserName }}</strong> on {{ comment.CommentCreatedAt }}</p>\r\n    <p>{{ comment.CommentBody }}</p>\r\n\r\n    <div *ngIf=\"comment.User.UserId === UserId || comment.User.UserIsAdmin\">\r\n      <button (click)=\"editComment(comment.CommentId)\">Edit Comment</button>\r\n      <button (click)=\"deleteComment(comment.CommentId)\">Delete Comment</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"comment.ChildComments && comment.ChildComments.length > 0\">\r\n      <div class=\"child-comments\">\r\n        <div *ngFor=\"let childComment of comment.ChildComments\" class=\"comment-item\">\r\n          <p><strong>{{ childComment.User.UserName }}</strong> on {{ childComment.CommentCreatedAt }}</p>\r\n          <p>{{ childComment.CommentBody }}</p>\r\n\r\n          <div *ngIf=\"childComment.User.UserId === UserId || childComment.User.UserIsAdmin\">\r\n            <button (click)=\"editComment(childComment.CommentId)\">Edit Comment</button>\r\n            <button (click)=\"deleteComment(childComment.CommentId)\">Delete Comment</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </tr>\r\n</table>\r\n-->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}