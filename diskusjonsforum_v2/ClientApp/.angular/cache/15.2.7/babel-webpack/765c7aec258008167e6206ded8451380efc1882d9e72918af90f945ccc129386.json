{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nconst _c0 = function () {\n  return [\"link-active\"];\n};\nconst _c1 = function () {\n  return {\n    exact: true\n  };\n};\nconst _c2 = function () {\n  return [\"/\"];\n};\nconst _c3 = function () {\n  return [\"/threads\"];\n};\nexport class ThreadsComponent {\n  constructor(http) {\n    this.http = http;\n    this.viewTitle = 'Table';\n    this.listFilter = '';\n    this.thread = new thread();\n    this.userId = ''; //Initialize user Id\n    this.userIsAdmin = false; // and userIsAdmin\n  }\n\n  ngOnInit() {\n    this.userId = ''; // Fetch the current user's ID\n    this.userIsAdmin = false; // Check if the user is an admin\n    // Fetch thread details\n    this.http.get('api/threads/threadId').subscribe(thread => {\n      this.thread = thread;\n    });\n  }\n  // Function to add a comment\n  addComment() {\n    // Logic to add a comment\n  }\n  // Function to edit a comment\n  editComment(commentId) {\n    // Logic to edit a comment\n  }\n  // Function to delete a comment\n  deleteComment(commentId) {\n    // Logic to delete a comment\n  }\n}\nThreadsComponent.ɵfac = function ThreadsComponent_Factory(t) {\n  return new (t || ThreadsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadsComponent,\n  selectors: [[\"app-thread-component\"]],\n  decls: 19,\n  vars: 13,\n  consts: [[\"id\", \"tabelLabel\"], [\"aria-labelledby\", \"tabelLabel\", 1, \"table\", \"table-striped\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [1, \"navbar-nav\", \"flex-grow\"], [1, \"nav-thread\", 3, \"routerLinkActive\", \"routerLinkActiveOptions\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"], [1, \"nav-item\", 3, \"routerLinkActive\"]],\n  template: function ThreadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 1)(3, \"div\", 2)(4, \"div\", 3);\n      i0.ɵɵtext(5, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ThreadsComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 6)(10, \"h4\");\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"ul\", 7)(13, \"li\", 8)(14, \"a\", 9);\n      i0.ɵɵtext(15, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"li\", 10)(17, \"a\", 9);\n      i0.ɵɵtext(18, \" Threads \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Threads (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(8, _c0))(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(9, _c1));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(11, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c3));\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.RouterLink, i3.RouterLinkActive],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AASA,OAAM,MAAOA,gBAAgB;EAQ3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPxB,cAAS,GAAW,OAAO;IAC3B,eAAU,GAAW,EAAE;IAEvB,WAAM,GAAY,IAAIC,MAAM,EAAE;IAC9B,WAAM,GAAW,EAAE,CAAC,CAAC;IACrB,gBAAW,GAAY,KAAK,CAAC,CAAE;EAES;;EAExCC,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,EAAE,CAAC,CAAC;IAClB,IAAI,CAACC,WAAW,GAAG,KAAK,CAAC,CAAC;IAE1B;IACA,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,sBAAsB,CAAC,CAACC,SAAS,CAAEL,MAAM,IAAI;MAC9D,IAAI,CAACA,MAAM,GAAGA,MAAM;IACtB,CAAC,CAAC;EACJ;EAEA;EACAM,UAAU;IACR;EAAA;EAGF;EACAC,WAAW,CAACC,SAAiB;IAC3B;EAAA;EAGF;EACAC,aAAa,CAACD,SAAiB;IAC7B;EAAA;;AAhCSX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT7BC,6BAAoB;MAAAA,YAAoC;MAAAA,iBAAK;MAE7DA,gCAAgE;MAEtCA,0BAAU;MAAAA,iBAAM;MACtCA,8BAAsB;MACDA;QAAA;MAAA,EAAwB;MAA3CA,iBAA8C;MAIlDA,8BAAiB;MAETA,aAA2B;MAAAA,iBAAK;MA0B1CA,8BAAiC;MAMwBA,qBAAI;MAAAA,iBAAI;MAE/DA,+BAA0D;MAEtDA,0BACF;MAAAA,iBAAI;;;MAjDYA,eAAoC;MAApCA,mEAAoC;MAM/BA,eAAwB;MAAxBA,wCAAwB;MAMvCA,eAA2B;MAA3BA,0DAA2B;MA6BjCA,eAAoC;MAApCA,6DAAoC;MAGJA,eAAoB;MAApBA,wDAAoB;MAEjCA,eAAoC;MAApCA,8DAAoC;MACzBA,eAA2B;MAA3BA,wDAA2B","names":["ThreadsComponent","constructor","http","thread","ngOnInit","userId","userIsAdmin","get","subscribe","addComment","editComment","commentId","deleteComment","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.ts","C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {TThread} from './threads';\r\n\r\n@Component({\r\n  selector: 'app-thread-component',\r\n  templateUrl: './threads.component.html',\r\n  //styleUrls: ['./threads.component.css']\r\n})\r\nexport class ThreadsComponent{\r\n  viewTitle: string = 'Table';\r\n  listFilter: string = '';\r\n\r\n  thread: TThread = new thread();\r\n  userId: string = ''; //Initialize user Id\r\n  userIsAdmin: boolean = false;  // and userIsAdmin\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = ''; // Fetch the current user's ID\r\n    this.userIsAdmin = false; // Check if the user is an admin\r\n\r\n    // Fetch thread details\r\n    this.http.get<any>('api/threads/threadId').subscribe((thread) => {\r\n      this.thread = thread;\r\n    });\r\n  }\r\n\r\n  // Function to add a comment\r\n  addComment() {\r\n    // Logic to add a comment\r\n  }\r\n\r\n  // Function to edit a comment\r\n  editComment(commentId: number) {\r\n    // Logic to edit a comment\r\n  }\r\n\r\n  // Function to delete a comment\r\n  deleteComment(commentId: number) {\r\n    // Logic to delete a comment\r\n  }\r\n}\r\n","<h1 id=\"tabelLabel\">List of Threads ({{viewTitle}} View)</h1>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tabelLabel\">\r\n  <div class=\"row\">\r\n    <div class='col-md-2'>Filter by:</div>\r\n    <div class='col-md-4'>\r\n      <input type=\"text\" [(ngModel)]=\"listFilter\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h4>Filtered by: {{listFilter}}</h4>\r\n    </div>\r\n  </div>\r\n\r\n  <!--\r\n  <h2>Thread Details</h2>\r\n  <p>Thread ID: {{ thread.ThreadId }}</p>\r\n  <p>Thread Title: {{ thread.ThreadTitle }}</p>\r\n  <p>Thread Body: {{ thread.ThreadBody }}</p>\r\n  <h3>Comments</h3>\r\n  <ul>\r\n    <li *ngFor=\"let comment of thread.ThreadComments\">\r\n      <div class=\"comment\">\r\n        <p>Posted by: {{ comment.User.UserName }} on {{ comment.CommentCreatedAt }}</p>\r\n        <p>{{ comment.CommentBody }}</p>\r\n\r\n        <div *ngIf=\"userId === comment.UserId || userIsAdmin\">\r\n          <button (click)=\"editComment(comment.CommentId)\">Edit Comment</button>\r\n          <button (click)=\"deleteComment(comment.CommentId)\">Delete Comment</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</table>\r\n-->\r\n\r\n<ul class=\"navbar-nav flex-grow\">\r\n  <li\r\n    class=\"nav-thread\"\r\n    [routerLinkActive]=\"['link-active']\"\r\n    [routerLinkActiveOptions]=\"{ exact: true}\"\r\n    >\r\n      <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n  </li>\r\n  <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/threads']\">\r\n      Threads\r\n    </a>\r\n  </li>\r\n</ul>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}