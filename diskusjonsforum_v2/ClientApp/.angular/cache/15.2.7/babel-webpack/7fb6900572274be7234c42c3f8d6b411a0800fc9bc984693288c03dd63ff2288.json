{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./comments.service\";\nimport * as i2 from \"@angular/common/http\";\n//import { User } from '../users/users';\nexport class CommentsComponent {\n  //users: User[] = []; // Assuming you want to use the User interface here\n  ngOnInit() {\n    console.log('CommentsComponent created');\n    this.getComments();\n    // If you want to get users, you can call a method to fetch them here\n    // this.getUsers();\n  }\n\n  constructor(commentsService, _http, _router) {\n    this.commentsService = commentsService;\n    this._http = _http;\n    this._router = _router;\n    this.viewTitle = \"Table\";\n    this.comments = [];\n  }\n  getComments() {\n    this._http.get('api/comments').subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.comments = data;\n    });\n  }\n  /*\r\n  getUsers(): void {\r\n    this._http.get<User[]>('api/users').subscribe(data => {\r\n      console.log('All users', JSON.stringify(data));\r\n      this.users = data;\r\n    });\r\n  } */\n  // Function to add a comment\n  addComment() {\n    // Logic to add a comment\n  }\n  // Function to edit a comment\n  editComment(commentId) {\n    // Logic to edit a comment\n  }\n  // Function to delete a comment\n  deleteComment(commentId) {\n    // Logic to delete a comment\n  }\n}\nCommentsComponent.ɵfac = function CommentsComponent_Factory(t) {\n  return new (t || CommentsComponent)(i0.ɵɵdirectiveInject(i1.CommentsService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nCommentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentsComponent,\n  selectors: [[\"app-comment-component\"]],\n  decls: 4,\n  vars: 0,\n  consts: [[\"id\", \"tabelLabel\"]],\n  template: function CommentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"List of Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \" not implemented \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AASA;AAQA,OAAM,MAAOA,iBAAiB;EAG5B;EAIAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,IAAI,CAACC,WAAW,EAAE;IAClB;IACA;EACF;;EACAC,YAAoBC,eAAiC,EAAUC,KAAiB,EAAWC,OAAmB;IAA1F,oBAAe,GAAfF,eAAe;IAA4B,UAAK,GAALC,KAAK;IAAuB,YAAO,GAAPC,OAAO;IAZlG,cAAS,GAAW,OAAO;IAC3B,aAAQ,GAAc,EAAE;EAYxB;EACAJ,WAAW;IACT,IAAI,CAACG,KAAK,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MACzDT,OAAO,CAACC,GAAG,CAAC,KAAK,EAAES,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;MACxC,IAAI,CAACG,QAAQ,GAAGH,IAAI;IACtB,CAAC,CAAC;EACJ;EAIA;;;;;;;EAQA;EACAI,UAAU;IACR;EAAA;EAGF;EACAC,WAAW,CAACC,SAAiB;IAC3B;EAAA;EAGF;EACAC,aAAa,CAACD,SAAiB;IAC7B;EAAA;;AA5CSjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCjB9BC,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MACzCA,yBAAG;MAACA,iCAAgB;MAAAA,iBAAI","names":["CommentsComponent","ngOnInit","console","log","getComments","constructor","commentsService","_http","_router","get","subscribe","data","JSON","stringify","comments","addComment","editComment","commentId","deleteComment","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\comments.component.ts","C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\comments.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Comment } from './comments';\r\nimport {ThreadService} from \"../threads/threads.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {CommentsService} from \"./comments.service\";\r\n\r\n\r\n//import { User } from '../users/users';\r\n\r\n@Component({\r\n  selector: 'app-comment-component',\r\n  templateUrl: './comments.component.html',\r\n  // styleUrls: ['./comment.component.css']\r\n})\r\n\r\nexport class CommentsComponent implements OnInit {\r\n  viewTitle: string = \"Table\";\r\n  comments: Comment[] = [];\r\n  //users: User[] = []; // Assuming you want to use the User interface here\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    console.log('CommentsComponent created');\r\n    this.getComments();\r\n    // If you want to get users, you can call a method to fetch them here\r\n    // this.getUsers();\r\n  }\r\n  constructor(private commentsService : CommentsService, private _http: HttpClient , private _router: HttpClient) {\r\n  }\r\n  getComments(): void{\r\n    this._http.get<Comment[]>('api/comments').subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      this.comments = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  getUsers(): void {\r\n    this._http.get<User[]>('api/users').subscribe(data => {\r\n      console.log('All users', JSON.stringify(data));\r\n      this.users = data;\r\n    });\r\n  } */\r\n\r\n  // Function to add a comment\r\n  addComment() {\r\n    // Logic to add a comment\r\n  }\r\n\r\n  // Function to edit a comment\r\n  editComment(commentId: number) {\r\n    // Logic to edit a comment\r\n  }\r\n\r\n  // Function to delete a comment\r\n  deleteComment(commentId: number) {\r\n    // Logic to delete a comment\r\n  }\r\n\r\n}\r\n","<h2 id=\"tabelLabel\">List of Comments</h2>\r\n<p> not implemented </p>\r\n<!--\r\n<table>\r\n  <tr *ngFor=\"let comment of comments\">\r\n    <p><strong>{{ comment.User.UserName }}</strong> on {{ comment.CommentCreatedAt }}</p>\r\n    <p>{{ comment.CommentBody }}</p>\r\n\r\n    <div *ngIf=\"comment.User.UserId === UserId || comment.User.UserIsAdmin\">\r\n      <button (click)=\"editComment(comment.CommentId)\">Edit Comment</button>\r\n      <button (click)=\"deleteComment(comment.CommentId)\">Delete Comment</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"comment.ChildComments && comment.ChildComments.length > 0\">\r\n      <div class=\"child-comments\">\r\n        <div *ngFor=\"let childComment of comment.ChildComments\" class=\"comment-item\">\r\n          <p><strong>{{ childComment.User.UserName }}</strong> on {{ childComment.CommentCreatedAt }}</p>\r\n          <p>{{ childComment.CommentBody }}</p>\r\n\r\n          <div *ngIf=\"childComment.User.UserId === UserId || childComment.User.UserIsAdmin\">\r\n            <button (click)=\"editComment(childComment.CommentId)\">Edit Comment</button>\r\n            <button (click)=\"deleteComment(childComment.CommentId)\">Delete Comment</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </tr>\r\n</table>\r\n-->\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}