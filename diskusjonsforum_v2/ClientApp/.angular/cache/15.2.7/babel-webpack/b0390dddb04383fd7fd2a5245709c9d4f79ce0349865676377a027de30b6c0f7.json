{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./threads.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction ThreadformComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"b\");\n    i0.ɵɵtext(2, \"Maximum length exceeded (max 30 characters).\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadformComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"b\");\n    i0.ɵɵtext(2, \"Maximum length exceeded (max 100 characters).\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadformComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"b\");\n    i0.ɵɵtext(2, \"Maximum length exceeded (max 2500 characters).\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ThreadformComponent {\n  constructor(_formBuilder, _router,\n  // Initialise router object for navigation\n  _threadService, _http) {\n    this._formBuilder = _formBuilder;\n    this._router = _router;\n    this._threadService = _threadService;\n    this._http = _http;\n    this.threadForm = _formBuilder.group({\n      // Define FormBuilder input validation rules\n      createdBy: ['', [Validators.required, Validators.maxLength(30)]],\n      threadTitle: ['', [Validators.required, Validators.maxLength(100)]],\n      threadBody: ['', [Validators.required, Validators.maxLength(2500)]]\n    });\n  }\n  onSubmit() {\n    console.log(\"ThreadCreate from submitted:\");\n    console.log(this.threadForm);\n    console.log('The thread ' + this.threadForm.value.title + ' is created.');\n    console.log(this.threadForm.touched);\n    const newThread = this.threadForm.value; // Creates a Thread object with values from the form\n    this._threadService.createThread(newThread) //Send the new thread to ThreadService->ThreadController to save\n    .subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        this._router.navigate(['/threads']); // navigates back to /threads\n      } else {\n        console.log('Thread creation failed');\n      }\n    });\n  }\n  backToThreads() {\n    this._router.navigate(['/threads']); //navigates back to table view of threads\n  }\n}\n\nThreadformComponent.ɵfac = function ThreadformComponent_Factory(t) {\n  return new (t || ThreadformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ThreadService), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nThreadformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadformComponent,\n  selectors: [[\"app-threads-threadform\"]],\n  decls: 28,\n  vars: 5,\n  consts: [[1, \"tabelLabel\", \"text-white\"], [1, \"form-box\"], [1, \"create-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"create-information\"], [\"for\", \"createdBy\", 1, \"input-label\"], [\"type\", \"text\", \"id\", \"createdBy\", \"formControlName\", \"createdBy\", \"oninput\", \"this.style.height = \\\"\\\";this.style.height = this.scrollHeight + \\\"px\\\"\", 1, \"form-control\", \"username-input\"], [\"class\", \"error-form\", 4, \"ngIf\"], [\"for\", \"threadTitle\", 1, \"input-label\"], [\"type\", \"text\", \"id\", \"threadTitle\", \"formControlName\", \"threadTitle\", \"oninput\", \"this.style.height = \\\"\\\";this.style.height = this.scrollHeight + \\\"px\\\"\", 1, \"form-control\", \"title-input\"], [\"for\", \"threadBody\", 1, \"input-label\"], [\"type\", \"text\", \"id\", \"threadBody\", \"formControlName\", \"threadBody\", \"oninput\", \"this.style.height = \\\"\\\";this.style.height = this.scrollHeight + \\\"px\\\"\", 1, \"form-control\", \"body-input\", \"scroll\"], [1, \"create-thread-buttons\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"create-button\", 3, \"disabled\"], [1, \"btn\", \"btn-secondary\", \"cancel-button\", 3, \"click\"], [1, \"error-form\"]],\n  template: function ThreadformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"Create Thread\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ThreadformComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Username:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"textarea\", 7);\n      i0.ɵɵtext(10, \" \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, ThreadformComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"textarea\", 10);\n      i0.ɵɵtext(16, \" \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, ThreadformComponent_div_17_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\", 11);\n      i0.ɵɵtext(20, \"Body:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"textarea\", 12);\n      i0.ɵɵtemplate(22, ThreadformComponent_div_22_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 13)(24, \"button\", 14);\n      i0.ɵɵtext(25, \"Create Thread\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function ThreadformComponent_Template_button_click_26_listener() {\n        return ctx.backToThreads();\n      });\n      i0.ɵɵtext(27, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.threadForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.threadForm.get(\"createdBy\")) == null ? null : tmp_1_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.threadForm.get(\"threadTitle\")) == null ? null : tmp_2_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.threadForm.get(\"threadBody\")) == null ? null : tmp_3_0.hasError(\"maxlength\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.threadForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".tabelLabel[_ngcontent-%COMP%] {\\r\\n  font-size: 30px;\\r\\n  text-align: center;\\r\\n  padding: 50px 0 30px 0;\\r\\n}\\r\\n\\r\\n\\r\\n.form-box[_ngcontent-%COMP%] {\\r\\n  overflow: hidden;\\r\\n  margin: auto;\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  font-size: 15px;\\r\\n  background-color: rgba(255, 255, 255, 0.9);\\r\\n  border-radius: 7px;\\r\\n  width: 100%;\\r\\n  padding: 30px;\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  color: #002c45;\\r\\n  box-shadow: 3px 4px 5px 0px rgba(0, 0, 0, 0.38);\\r\\n}\\r\\n\\r\\n\\r\\n.create-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  transition: .5s ease-in-out;\\r\\n  padding: 15px;\\r\\n  color: #002c45;\\r\\n}\\r\\n\\r\\n.create-information[_ngcontent-%COMP%] {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.body-input[_ngcontent-%COMP%] {\\r\\n    height: 200px;\\r\\n}\\r\\n\\r\\n\\r\\n.username-input[_ngcontent-%COMP%], .title-input[_ngcontent-%COMP%], .body-input[_ngcontent-%COMP%], .comment-input[_ngcontent-%COMP%], .editBox[_ngcontent-%COMP%]{\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 10px 20px;\\r\\n}\\r\\n\\r\\n\\r\\n.create-thread-buttons[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.create-button[_ngcontent-%COMP%] {\\r\\n  font-size: 17px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 35px;\\r\\n  margin-top: 20px;\\r\\n  width: 30%;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  background-color: rgba(51, 153, 105, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .create-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(51, 153, 105, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n.cancel-button[_ngcontent-%COMP%] {\\r\\n  font-size: 17px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 35px;\\r\\n  margin-top: 20px;\\r\\n  margin-left: 20px;\\r\\n  width: 20%;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  background-color: rgba(250, 50, 50, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .cancel-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgba(255, 0, 0, 0.8);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n\\r\\n\\r\\n.cancel-comment-button[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgba(255, 135, 135, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n  .cancel-comment-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgba(255, 0, 0, 0.8);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n\\r\\n.input-label[_ngcontent-%COMP%] {\\r\\n  margin-left: 4px;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.add-comment-button[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgba(51, 153, 105, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n  .add-comment-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(51, 153, 105, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n\\r\\n#displayPost[_ngcontent-%COMP%] {\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border-radius: 7px;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 20px 20px 0px 20px;\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n#displayComments[_ngcontent-%COMP%] {\\r\\n    margin: 25px 10px 25px;\\r\\n}\\r\\n\\r\\n.comment-count[_ngcontent-%COMP%] {\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.thread-title-current[_ngcontent-%COMP%] {\\r\\n    font-size: calc(0.1rem + 1.5vw);\\r\\n}\\r\\n\\r\\n.comments-header[_ngcontent-%COMP%] {\\r\\n    font-size: calc(0.7rem + .6vw);\\r\\n}\\r\\n\\r\\n.thread-body[_ngcontent-%COMP%] {\\r\\n  font-weight: 400;\\r\\n  margin: 0;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\n\\r\\n\\r\\n.scroll[_ngcontent-%COMP%]::-webkit-scrollbar {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.actual-comment[_ngcontent-%COMP%]{\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border-radius: 7px;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 20px 20px 0px 20px;\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n\\r\\n.comment-input[_ngcontent-%COMP%] {\\r\\n  resize: none;\\r\\n  overflow-y: hidden;\\r\\n  width: 100%;\\r\\n  border-radius: 7px;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.editBtn[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: black;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-right: 10px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 11%;\\r\\n  border: 0.5px solid #e9ecef;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background: linear-gradient(160deg, #f8f9fa, #e9ecef);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n  .editBtn[_ngcontent-%COMP%]:hover {\\r\\n    background: linear-gradient(320deg, #f8f9fa, #e9ecef);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.3);\\r\\n  }\\r\\n\\r\\n\\r\\n.deleteBtn[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-right: 10px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 11%;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  background: rgba(255, 135, 135, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n  .deleteBtn[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(255, 0, 0, 0.8);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.3);\\r\\n  }\\r\\n\\r\\n\\r\\n.editBox[_ngcontent-%COMP%] {\\r\\n  border-radius: 7px;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  margin-bottom: 5px;\\r\\n  width: 100%;\\r\\n  height: 30%;\\r\\n}\\r\\n\\r\\n\\r\\n.editTitle[_ngcontent-%COMP%]{\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  padding-left: 20px;\\r\\n  padding-right: 20px;\\r\\n  border-radius: 7px;\\r\\n}\\r\\n\\r\\n\\r\\n.error-form[_ngcontent-%COMP%] {\\r\\n  margin: 3px 0 0 5px;\\r\\n  color: rgba(150, 29, 29, 0.9);\\r\\n}\\r\\n\\r\\n\\r\\n.break-word[_ngcontent-%COMP%] {\\r\\n  overflow: hidden;\\r\\n  word-wrap: break-word;\\r\\n  white-space: normal;\\r\\n}\\r\\n\\r\\n\\r\\n.backBtn[_ngcontent-%COMP%] {\\r\\n  background-color: transparent;\\r\\n  color: #f8f9fa;\\r\\n  border-color: transparent;\\r\\n  transition: 300ms ease;\\r\\n}\\r\\n\\r\\n.backBtn[_ngcontent-%COMP%]:hover{\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n\\r\\n.outerBackDiv[_ngcontent-%COMP%]{\\r\\n  align-items: center;\\r\\n  font-size: 30px;\\r\\n  text-align: center;\\r\\n  margin-bottom: -10px;\\r\\n  padding-right: 42%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ThreadformComponent","constructor","_formBuilder","_router","_threadService","_http","threadForm","group","createdBy","required","maxLength","threadTitle","threadBody","onSubmit","console","log","value","title","touched","newThread","createThread","subscribe","response","success","message","navigate","backToThreads","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threadform.component.ts","C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threadform.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ThreadService } from './threads.service';\r\n\r\n@Component({\r\n  selector: 'app-threads-threadform',\r\n  templateUrl: './threadform.component.html', // path to the HTML component\r\n  styleUrls: ['../../css/thread_view.css'],\r\n})\r\n\r\nexport class ThreadformComponent {\r\n  threadForm: FormGroup; // Initialise a FormGroup object\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _router: Router, // Initialise router object for navigation\r\n    private _threadService: ThreadService,\r\n    private _http: HttpClient)\r\n  {\r\n    this.threadForm = _formBuilder.group({\r\n      // Define FormBuilder input validation rules\r\n      createdBy: ['', [Validators.required, Validators.maxLength(30)]],\r\n      threadTitle: ['', [Validators.required, Validators.maxLength(100)]],\r\n      threadBody: ['', [Validators.required, Validators.maxLength(2500)]],\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    console.log(\"ThreadCreate from submitted:\");\r\n    console.log(this.threadForm);\r\n    console.log('The thread ' + this.threadForm.value.title + ' is created.');\r\n    console.log(this.threadForm.touched);\r\n    const newThread = this.threadForm.value; // Creates a Thread object with values from the form\r\n    this._threadService.createThread(newThread) //Send the new thread to ThreadService->ThreadController to save\r\n      .subscribe(response => {\r\n      if (response.success) {\r\n        console.log(response.message);\r\n        this._router.navigate(['/threads']);  // navigates back to /threads\r\n      }\r\n      else {\r\n        console.log('Thread creation failed');\r\n      }\r\n    });\r\n  }\r\n\r\n  backToThreads() {\r\n    this._router.navigate(['/threads']); //navigates back to table view of threads\r\n  }\r\n}\r\n","<h2 class=\"tabelLabel text-white\">Create Thread</h2>\r\n\r\n<div class=\"form-box\">\r\n  <div class=\"create-container\">\r\n    <form [formGroup]=\"threadForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"form-group\">\r\n        <div class=\"create-information\">\r\n          <label class=\"input-label\" for=\"createdBy\">Username:</label>\r\n          <textarea type=\"text\" id=\"createdBy\" formControlName=\"createdBy\" class=\"form-control username-input\"  oninput='this.style.height = \"\";this.style.height = this.scrollHeight + \"px\"'> </textarea>\r\n            <div class=\"error-form\" *ngIf=\"threadForm.get('createdBy')?.hasError('maxlength')\">\r\n              <b>Maximum length exceeded (max 30 characters).</b>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"create-information\">\r\n          <label class=\"input-label\" for=\"threadTitle\">Title:</label>\r\n          <!-- The oninput code below makes the textarea expand as the user types -->\r\n          <!-- Source: https://stackoverflow.com/questions/2803880/is-there-a-way-to-get-a-textarea-to-stretch-to-fit-its-content-without-using-php -->\r\n          <textarea type=\"text\" id=\"threadTitle\" formControlName=\"threadTitle\" class=\"form-control title-input\"  oninput='this.style.height = \"\";this.style.height = this.scrollHeight + \"px\"'> </textarea>\r\n            <div class=\"error-form\" *ngIf=\"threadForm.get('threadTitle')?.hasError('maxlength')\">\r\n              <b>Maximum length exceeded (max 100 characters).</b>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"create-information\">\r\n          <label class=\"input-label\" for=\"threadBody\">Body:</label>\r\n            <textarea type=\"text\" id=\"threadBody\" formControlName=\"threadBody\" class=\"form-control body-input scroll\" oninput='this.style.height = \"\";this.style.height = this.scrollHeight + \"px\"'></textarea>\r\n            <div class=\"error-form\" *ngIf=\"threadForm.get('threadBody')?.hasError('maxlength')\">\r\n              <b>Maximum length exceeded (max 2500 characters).</b>\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"create-thread-buttons\">\r\n        <button type=\"submit\" class=\"btn btn-primary create-button\" [disabled]=\"threadForm.invalid\">Create Thread</button>\r\n        <button class=\"btn btn-secondary cancel-button\" (click)=\"backToThreads()\">Cancel</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}