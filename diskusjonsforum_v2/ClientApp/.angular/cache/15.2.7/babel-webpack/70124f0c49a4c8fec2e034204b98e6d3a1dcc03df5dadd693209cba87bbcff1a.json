{"ast":null,"code":"import { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { CommentsService } from \"../comments/comments.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./threads.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction ThreadViewComponent_div_3_div_1_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"i\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Last edited: \", i0.ɵɵpipeBind2(3, 1, ctx_r7.thread.threadLastEditedAt, \"yyyy-MM-dd HH:mm\"), \"\");\n  }\n}\nconst _c0 = function () {\n  return [\"/threads\"];\n};\nfunction ThreadViewComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h1\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"p\");\n    i0.ɵɵtext(5, \" Posted by \");\n    i0.ɵɵelementStart(6, \"b\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8, \" on the \");\n    i0.ɵɵelementStart(9, \"b\");\n    i0.ɵɵtext(10);\n    i0.ɵɵpipe(11, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12, \". \");\n    i0.ɵɵtemplate(13, ThreadViewComponent_div_3_div_1_span_13_Template, 4, 4, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"hr\");\n    i0.ɵɵelementStart(15, \"p\", 12);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\")(18, \"p\", 13);\n    i0.ɵɵelement(19, \"img\", 14);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ThreadViewComponent_div_3_div_1_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.toggleEdit());\n    });\n    i0.ɵɵtext(22, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ThreadViewComponent_div_3_div_1_Template_button_click_23_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.deletePost(ctx_r10.thread));\n    });\n    i0.ɵɵtext(24, \"Delete\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r4.thread.threadTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r4.thread.createdBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(11, 7, ctx_r4.thread.threadCreatedAt, \"yyyy-MM-dd HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.thread.threadCreatedAt !== ctx_r4.thread.threadLastEditedAt);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r4.thread.threadBody);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.thread.threadComments == null ? null : ctx_r4.thread.threadComments.length, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n  }\n}\nfunction ThreadViewComponent_div_3_ng_template_2_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"i\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Last edited: \", i0.ɵɵpipeBind2(3, 1, ctx_r11.thread.threadLastEditedAt, \"yyyy-MM-dd HH:mm\"), \"\");\n  }\n}\nconst _c1 = function (a1) {\n  return [\"/thread-view/\", a1];\n};\nfunction ThreadViewComponent_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function ThreadViewComponent_div_3_ng_template_2_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.editedTitle = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"div\", 10)(2, \"p\");\n    i0.ɵɵtext(3, \" Posted by \");\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" on the \");\n    i0.ɵɵelementStart(7, \"b\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \". \");\n    i0.ɵɵtemplate(11, ThreadViewComponent_div_3_ng_template_2_span_11_Template, 4, 4, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"hr\");\n    i0.ɵɵelementStart(13, \"textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function ThreadViewComponent_div_3_ng_template_2_Template_textarea_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r14.editedContent = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\")(15, \"p\", 13);\n    i0.ɵɵelement(16, \"img\", 14);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ThreadViewComponent_div_3_ng_template_2_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r15.saveChanges());\n    });\n    i0.ɵɵtext(19, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ThreadViewComponent_div_3_ng_template_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r16.cancelEdit());\n    });\n    i0.ɵɵtext(21, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.editedTitle);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r6.thread.createdBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 7, ctx_r6.thread.threadCreatedAt, \"yyyy-MM-dd HH:mm\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.thread.threadCreatedAt !== ctx_r6.thread.threadLastEditedAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r6.editedContent);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.thread.threadComments == null ? null : ctx_r6.thread.threadComments.length, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c1, ctx_r6.thread.threadId));\n  }\n}\nfunction ThreadViewComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ThreadViewComponent_div_3_div_1_Template, 25, 11, \"div\", 6);\n    i0.ɵɵtemplate(2, ThreadViewComponent_div_3_ng_template_2_Template, 22, 12, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(3);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isEditing)(\"ngIfElse\", _r5);\n  }\n}\nfunction ThreadViewComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"p\");\n    i0.ɵɵtext(2, \"The requested thread was not found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadViewComponent_div_6_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"No comments yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadViewComponent_div_6_div_11_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"i\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const comment_r19 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\". Last edited at: \", i0.ɵɵpipeBind2(3, 1, comment_r19.commentLastEditedAt, \"yyyy-MM-dd HH:mm\"), \"\");\n  }\n}\nfunction ThreadViewComponent_div_6_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\")(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" replied on the \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, ThreadViewComponent_div_6_div_11_ng_container_8_Template, 4, 4, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\")(12, \"button\", 28);\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 28);\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(16, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r19 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r19.createdBy);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(7, 4, comment_r19.commentCreatedAt, \"yyyy-MM-dd HH:mm\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", comment_r19.commentLastEditedAt !== comment_r19.commentCreatedAt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r19.commentBody);\n  }\n}\nfunction ThreadViewComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"h3\", 21);\n    i0.ɵɵtext(2, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 22)(4, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function ThreadViewComponent_div_6_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r22.newCommentCreatedBy = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"textarea\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function ThreadViewComponent_div_6_Template_textarea_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.newCommentBody = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\")(7, \"button\", 25);\n    i0.ɵɵlistener(\"click\", function ThreadViewComponent_div_6_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.addComment());\n    });\n    i0.ɵɵtext(8, \"Add Comment\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"div\", 26);\n    i0.ɵɵtemplate(10, ThreadViewComponent_div_6_div_10_Template, 3, 0, \"div\", 11);\n    i0.ɵɵtemplate(11, ThreadViewComponent_div_6_div_11_Template, 17, 7, \"div\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.newCommentCreatedBy);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.newCommentBody);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.thread.threadComments || ctx_r3.thread.threadComments.length === 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.thread.threadComments);\n  }\n}\nexport class ThreadViewComponent {\n  constructor(route, threadService) {\n    this.route = route;\n    this.threadService = threadService;\n    this.thread = {};\n    this.newCommentBody = '';\n    this.newCommentCreatedBy = '';\n    this.isEditing = false;\n    this.unsubscribe$ = new Subject();\n    this.CommentsService = CommentsService;\n  }\n  // fetches the thread and the comments under the thread\n  ngOnInit() {\n    this.route.paramMap.pipe(takeUntil(this.unsubscribe$)).subscribe(params => {\n      const threadId = +params.get('id');\n      // fetches the thread by threadId\n      this.threadService.getThread(threadId).subscribe(thread => {\n        this.thread = thread;\n        // fetches the comment that belongs to the thread by threadId\n        this.threadService.getCommentsForThread(threadId).subscribe(comments => {\n          this.thread.threadComments = comments;\n        }, error => {\n          console.error('Error fetching comments', error);\n        });\n      }, error => {\n        console.error('Error fetching thread', error);\n      });\n    });\n  }\n  // makes a constructor that takes in several data for comment. It is used in the HTML \"thread-view.component.html\" to add the data from the input\n  addComment() {\n    const newComment = {\n      commentId: 0,\n      commentBody: this.newCommentBody,\n      commentCreatedAt: new Date(),\n      commentLastEditedAt: new Date(),\n      threadId: this.thread.threadId,\n      thread: null,\n      parentCommentId: null,\n      parentComment: null,\n      createdBy: this.newCommentCreatedBy,\n      childComments: []\n    };\n    // adds the new comments to the thread it belongs to by the threadId\n    this.threadService.addCommentToThread(this.thread.threadId, newComment).subscribe(updatedThread => {\n      this.thread = updatedThread;\n      this.newCommentBody = '';\n      this.newCommentCreatedBy = '';\n    }, error => {\n      console.error('Error adding comment', error);\n    });\n  }\n  // deletes the thread by threadId\n  deletePost(thread) {\n    const confirmDelete = confirm(`Are you sure you want to delete \"${thread.threadTitle}\"`);\n    if (confirmDelete) {\n      this.threadService.deleteThread(thread.threadId).subscribe(response => {\n        if (response.success) {\n          console.log(response.message);\n        }\n      }, error => {\n        console.error('Error deleting item', error);\n      });\n    }\n  }\n  toggleEdit() {\n    this.isEditing = !this.isEditing;\n  }\n  saveChanges() {\n    // Perform the logic to save changes, update thread.title and thread.body\n    // Call the service method to update the thread\n    this.thread.threadTitle = this.editedTitle;\n    this.thread.threadBody = this.editedContent;\n    this.threadService.updateThread(this.thread).subscribe(response => {\n      console.log(response.message);\n      // Reset isEditing flag after successful save\n      this.isEditing = false;\n    }, error => {\n      console.error('Error saving changes', error);\n    });\n  }\n  cancelEdit() {\n    // Reset editedTitle and editedContent with the current values\n    this.editedTitle = this.thread.threadTitle;\n    this.editedContent = this.thread.threadBody;\n    // Reset isEditing flag\n    this.isEditing = false;\n  }\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\nThreadViewComponent.ɵfac = function ThreadViewComponent_Factory(t) {\n  return new (t || ThreadViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ThreadService));\n};\nThreadViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadViewComponent,\n  selectors: [[\"app-thread-view\"]],\n  decls: 7,\n  vars: 3,\n  consts: [[1, \"form-box\"], [1, \"create-container\"], [1, \"form-group\"], [4, \"ngIf\", \"ngIfElse\"], [\"notFound\", \"\"], [\"id\", \"displayComments\", 4, \"ngIf\"], [\"id\", \"displayPost\", 4, \"ngIf\", \"ngIfElse\"], [\"editMode\", \"\"], [\"id\", \"displayPost\"], [1, \"thread-title-current\"], [1, \"thread-information\"], [4, \"ngIf\"], [1, \"thread-body\"], [1, \"comment-count\"], [\"src\", \"../../assets/images/message-detail-regular-24.png\", \"alt\", \"...\", \"height\", \"20\"], [1, \"editBtn\", 3, \"click\"], [1, \"editBtn\", 3, \"routerLink\", \"click\"], [\"type\", \"text\", 1, \"editTitle\", 3, \"ngModel\", \"ngModelChange\"], [1, \"editBox\", 3, \"ngModel\", \"ngModelChange\"], [1, \"container\"], [\"id\", \"displayComments\"], [1, \"comments-header\"], [\"id\", \"textBox\"], [\"placeholder\", \"Display name\", 1, \"comment-input\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"What are your thoughts?\", 1, \"comment-input\", 3, \"ngModel\", \"ngModelChange\"], [1, \"add-comment-button\", 3, \"click\"], [1, \"actual-comment\"], [4, \"ngFor\", \"ngForOf\"], [1, \"commentBtn\"]],\n  template: function ThreadViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, ThreadViewComponent_div_3_Template, 4, 2, \"div\", 3);\n      i0.ɵɵtemplate(4, ThreadViewComponent_ng_template_4_Template, 3, 0, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(6, ThreadViewComponent_div_6_Template, 12, 4, \"div\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(5);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.thread.threadId)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.thread);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i1.RouterLink, i3.DatePipe],\n  styles: [\".recent-posts-title[_ngcontent-%COMP%], .tabelLabel[_ngcontent-%COMP%] {\\r\\n  font-size: 40px;\\r\\n  text-align: center;\\r\\n  padding: 10px 0 30px 0;\\r\\n}\\r\\n\\r\\n.form-box[_ngcontent-%COMP%] {\\r\\n  overflow: hidden;\\r\\n  margin: auto;\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n\\r\\n.form-group[_ngcontent-%COMP%] {\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  font-size: 15px;\\r\\n  background-color: rgba(255, 255, 255, 0.9);\\r\\n  border-radius: 7px;\\r\\n  width: 100%;\\r\\n  padding: 30px;\\r\\n  border: none;\\r\\n  outline: none;\\r\\n  color: #002c45;\\r\\n  box-shadow: 3px 4px 5px 0px rgba(0, 0, 0, 0.38);\\r\\n}\\r\\n\\r\\n.create-container[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  transition: .5s ease-in-out;\\r\\n  padding: 15px;\\r\\n  color: #002c45;\\r\\n}\\r\\n\\r\\n.create-information[_ngcontent-%COMP%] {\\r\\n    margin-top: 5px;\\r\\n}\\r\\n\\r\\n.body-input[_ngcontent-%COMP%] {\\r\\n    height: 200px;\\r\\n}\\r\\n\\r\\n.username-input[_ngcontent-%COMP%], .title-input[_ngcontent-%COMP%], .body-input[_ngcontent-%COMP%], .comment-input[_ngcontent-%COMP%], .editBox[_ngcontent-%COMP%]{\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  padding-left: 20px;\\r\\n  padding-right: 20px;\\r\\n}\\r\\n\\r\\n.create-thread-buttons[_ngcontent-%COMP%] {\\r\\n    margin: auto;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.create-button[_ngcontent-%COMP%] {\\r\\n  font-size: 17px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 35px;\\r\\n  margin-top: 20px;\\r\\n  width: 30%;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  background-color: rgba(29, 150, 53, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .create-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(29, 150, 53, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n.cancel-button[_ngcontent-%COMP%] {\\r\\n  font-size: 15px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 35px;\\r\\n  margin-top: 20px;\\r\\n  margin-left: 20px;\\r\\n  width: 17%;\\r\\n  border: none;\\r\\n  border-radius: 20px;\\r\\n  outline: none;\\r\\n  background-color: rgba(150, 29, 29, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  cursor: pointer;\\r\\n  transition: .3s ease-in-out;\\r\\n}\\r\\n\\r\\n  .cancel-button[_ngcontent-%COMP%]:hover, .delete-thread-button[_ngcontent-%COMP%]{\\r\\n    background: rgb(150, 29, 29, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n.delete-thread-button[_ngcontent-%COMP%]{\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgb(150, 29, 29, 07);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n\\r\\n.input-label[_ngcontent-%COMP%] {\\r\\n  margin-left: 4px;\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n\\r\\n.add-comment-button[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgba(29, 150, 53, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n  .add-comment-button[_ngcontent-%COMP%]:hover {\\r\\n    background: rgb(29, 150, 53, 07);\\r\\n    box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n  }\\r\\n\\r\\n.comment-input[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#displayPost[_ngcontent-%COMP%] {\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border-radius: 7px;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 20px 20px 0px 20px;\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n\\r\\n#displayComments[_ngcontent-%COMP%] {\\r\\n    margin: 25px 10px 25px;\\r\\n}\\r\\n\\r\\n.comment-count[_ngcontent-%COMP%] {\\r\\n    font-weight: 500;\\r\\n}\\r\\n\\r\\n.thread-title-current[_ngcontent-%COMP%] {\\r\\n    font-size: calc(0.1rem + 1.5vw);\\r\\n}\\r\\n\\r\\n.comments-header[_ngcontent-%COMP%] {\\r\\n    font-size: calc(0.7rem + .6vw);\\r\\n}\\r\\n\\r\\n.thread-body[_ngcontent-%COMP%] {\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.actual-comment[_ngcontent-%COMP%]{\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border-radius: 7px;\\r\\n  border: 1px solid #ccc;\\r\\n  padding: 20px 20px 0px 20px;\\r\\n  background-color: rgba(255, 255, 255, 0.8);\\r\\n}\\r\\n.comment-input[_ngcontent-%COMP%]{\\r\\n  border-radius: 7px;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.editBtn[_ngcontent-%COMP%]{\\r\\n\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgba(29, 150, 53, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n.editBtn[_ngcontent-%COMP%]:hover {\\r\\n  background: rgb(29, 150, 53, 07);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.2);\\r\\n}\\r\\n\\r\\n.editBox[_ngcontent-%COMP%] {\\r\\n  border-radius: 7px;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  margin-bottom: 5px;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.commentBtn[_ngcontent-%COMP%] {\\r\\n  font-size: 13px;\\r\\n  font-weight: 700;\\r\\n  color: white;\\r\\n  height: 30px;\\r\\n  margin-top: 7px;\\r\\n  margin-left: 2px;\\r\\n  margin-bottom: 20px;\\r\\n  width: 18%;\\r\\n  border: none;\\r\\n  border-radius: 7px;\\r\\n  outline: none;\\r\\n  background-color: rgba(29, 150, 53, 0.9);\\r\\n  box-shadow: 1px 5px 7px 1px rgba(0, 0, 0, 0.1);\\r\\n  cursor: pointer;\\r\\n  transition: .2s ease-out;\\r\\n}\\r\\n\\r\\n.editTitle[_ngcontent-%COMP%]{\\r\\n  font-family: 'Ubuntu', sans-serif;\\r\\n  font-weight: 300;\\r\\n  box-shadow: inset 0 1px 3px #ddd;\\r\\n  border: 1px solid #ccc;\\r\\n  padding-top: 10px;\\r\\n  padding-bottom: 10px;\\r\\n  padding-left: 20px;\\r\\n  padding-right: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"mappings":"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","names":["takeUntil","Subject","CommentsService","i0","ThreadViewComponent","constructor","route","threadService","ngOnInit","paramMap","pipe","unsubscribe$","subscribe","params","threadId","get","getThread","thread","getCommentsForThread","comments","threadComments","error","console","addComment","newComment","commentId","commentBody","newCommentBody","commentCreatedAt","Date","commentLastEditedAt","parentCommentId","parentComment","createdBy","newCommentCreatedBy","childComments","addCommentToThread","updatedThread","deletePost","confirmDelete","confirm","threadTitle","deleteThread","response","success","log","message","toggleEdit","isEditing","saveChanges","editedTitle","threadBody","editedContent","updateThread","cancelEdit","ngOnDestroy","next","complete","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\linn2\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\thread-view.component.ts","C:\\Users\\linn2\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\thread-view.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ThreadService } from './threads.service';\r\nimport { Thread } from './threads';\r\nimport { Comment } from '../comments/comments';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport {CommentsService} from \"../comments/comments.service\";\r\n\r\n@Component({\r\n  selector: 'app-thread-view',\r\n  templateUrl: './thread-view.component.html',\r\n  styleUrls: ['../../css/thread_view.css']\r\n})\r\nexport class ThreadViewComponent implements OnInit, OnDestroy {\r\n  thread: Thread = {} as Thread;\r\n  newCommentBody: string = '';\r\n  newCommentCreatedBy: string = '';\r\n  isEditing = false;\r\n  editedTitle!: string;\r\n  editedContent!: string;\r\n\r\n  private unsubscribe$ = new Subject<void>();\r\n\r\n  constructor(private route: ActivatedRoute, private threadService: ThreadService) {}\r\n  // fetches the thread and the comments under the thread\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      takeUntil(this.unsubscribe$)\r\n    ).subscribe(params => {\r\n      const threadId = +params.get('id')!;\r\n      // fetches the thread by threadId\r\n      this.threadService.getThread(threadId).subscribe(\r\n        (thread: Thread) => {\r\n          this.thread = thread;\r\n          // fetches the comment that belongs to the thread by threadId\r\n          this.threadService.getCommentsForThread(threadId).subscribe(\r\n            (comments: Comment[]) => {\r\n              this.thread.threadComments = comments;\r\n            },\r\n            (error) => {\r\n              console.error('Error fetching comments', error);\r\n            }\r\n          );\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching thread', error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n  // makes a constructor that takes in several data for comment. It is used in the HTML \"thread-view.component.html\" to add the data from the input\r\n  addComment() {\r\n    const newComment = {\r\n      commentId: 0,\r\n      commentBody: this.newCommentBody,\r\n      commentCreatedAt: new Date(),\r\n      commentLastEditedAt:new Date(),\r\n      threadId: this.thread.threadId,\r\n      thread: null,\r\n      parentCommentId: null,\r\n      parentComment: null,\r\n      createdBy: this.newCommentCreatedBy,\r\n      childComments: [],\r\n    };\r\n  // adds the new comments to the thread it belongs to by the threadId\r\n    this.threadService.addCommentToThread(this.thread.threadId, newComment).subscribe(\r\n      (updatedThread: Thread) => {\r\n        this.thread = updatedThread;\r\n        this.newCommentBody = '';\r\n        this.newCommentCreatedBy = '';\r\n      },\r\n      (error) => {\r\n        console.error('Error adding comment', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // deletes the thread by threadId\r\n  deletePost(thread: Thread){\r\n    const confirmDelete = confirm(`Are you sure you want to delete \"${thread.threadTitle}\"`);\r\n    if (confirmDelete){\r\n      this.threadService.deleteThread(thread.threadId).subscribe(\r\n        (response) => {\r\n          if (response.success){\r\n            console.log(response.message);\r\n          }\r\n        },\r\n        error => {\r\n          console.error('Error deleting item', error)\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  toggleEdit() {\r\n    this.isEditing = !this.isEditing;\r\n  }\r\n\r\n  saveChanges(): void {\r\n    // Perform the logic to save changes, update thread.title and thread.body\r\n    // Call the service method to update the thread\r\n    this.thread.threadTitle = this.editedTitle;\r\n    this.thread.threadBody = this.editedContent;\r\n\r\n    this.threadService.updateThread(this.thread).subscribe(\r\n      (response) => {\r\n        console.log(response.message);\r\n        // Reset isEditing flag after successful save\r\n        this.isEditing = false;\r\n      },\r\n      (error) => {\r\n        console.error('Error saving changes', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    // Reset editedTitle and editedContent with the current values\r\n    this.editedTitle = this.thread.threadTitle;\r\n    this.editedContent = this.thread.threadBody;\r\n    // Reset isEditing flag\r\n    this.isEditing = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n\r\n  protected readonly CommentsService = CommentsService;\r\n}\r\n","<div class=\"form-box\">\r\n  <div class=\"create-container\">\r\n    <div class=\"form-group\">\r\n      <div *ngIf=\"thread.threadId; else notFound\">\r\n        <div *ngIf=\"!isEditing; else editMode\" id=\"displayPost\">\r\n          <!-- Display content when not editing -->\r\n          <h1 class=\"thread-title-current\">{{ thread.threadTitle }}</h1>\r\n\r\n          <div class=\"thread-information\">\r\n            <!-- Thread information: user, post date, last edited date -->\r\n            <p>\r\n              Posted by <b>{{ thread.createdBy }}</b> on the <b>{{ thread.threadCreatedAt | date: 'yyyy-MM-dd HH:mm' }}</b>.\r\n              <!-- Display last edited date if different -->\r\n              <span *ngIf=\"thread.threadCreatedAt !== thread.threadLastEditedAt\">\r\n                <i>Last edited: {{ thread.threadLastEditedAt | date: 'yyyy-MM-dd HH:mm' }}</i>\r\n              </span>\r\n            </p>\r\n            <hr />\r\n            <p class=\"thread-body\">{{ thread.threadBody }}</p>\r\n          </div>\r\n          <div><p class=\"comment-count\"><img src=\"../../assets/images/message-detail-regular-24.png\" alt=\"...\" height=\"20\" />\r\n            {{ thread.threadComments?.length }}</p></div>\r\n          <button (click)=\"toggleEdit()\" class=\"editBtn\">Edit</button>\r\n          <button (click)=\"deletePost(thread)\" [routerLink]=\"['/threads']\" class=\"editBtn\">Delete</button>\r\n        </div>\r\n\r\n        <ng-template #editMode>\r\n          <!-- Display editable content when editing -->\r\n          <input type=\"text\" [(ngModel)]=\"editedTitle\" class=\"editTitle\"/>\r\n          <div class=\"thread-information\">\r\n            <!-- Thread information: user, post date, last edited date -->\r\n            <p>\r\n              Posted by <b>{{ thread.createdBy }}</b> on the <b>{{ thread.threadCreatedAt | date: 'yyyy-MM-dd HH:mm' }}</b>.\r\n              <!-- Display last edited date if different -->\r\n              <span *ngIf=\"thread.threadCreatedAt !== thread.threadLastEditedAt\">\r\n                <i>Last edited: {{ thread.threadLastEditedAt | date: 'yyyy-MM-dd HH:mm' }}</i>\r\n              </span>\r\n            </p>\r\n            <hr />\r\n            <textarea [(ngModel)]=\"editedContent\" class=\"editBox\"></textarea>\r\n          </div>\r\n          <div><p class=\"comment-count\"><img src=\"../../assets/images/message-detail-regular-24.png\" alt=\"...\" height=\"20\" />\r\n            {{ thread.threadComments?.length }}</p></div>\r\n          <button (click)=\"saveChanges()\" [routerLink]=\"['/thread-view/', thread.threadId]\" class=\"editBtn\">Save</button>\r\n          <button (click)=\"cancelEdit()\" class=\"editBtn\">Cancel</button>\r\n        </ng-template>\r\n      </div>\r\n\r\n      <ng-template #notFound>\r\n        <div class=\"container\">\r\n          <p>The requested thread was not found.</p>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <div id=\"displayComments\" *ngIf=\"thread\">\r\n        <h3 class=\"comments-header\">Comments</h3>\r\n\r\n        <!-- Input box for adding comments -->\r\n        <div id=\"textBox\">\r\n          <input [(ngModel)]=\"newCommentCreatedBy\" placeholder=\"Display name\" class=\"comment-input\">\r\n          <textarea [(ngModel)]=\"newCommentBody\" placeholder=\"What are your thoughts?\" class=\"comment-input\"></textarea>\r\n          <div>\r\n            <button (click)=\"addComment()\" class=\"add-comment-button\">Add Comment</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Display existing comments -->\r\n        <div class=\"actual-comment\">\r\n          <div *ngIf=\"!thread.threadComments || thread.threadComments.length === 0\">\r\n            <p>No comments yet.</p>\r\n          </div>\r\n          <div *ngFor=\"let comment of thread.threadComments\">\r\n            <p> <b>{{comment.createdBy}}</b> replied on the <b>{{comment.commentCreatedAt | date:'yyyy-MM-dd HH:mm'}}</b>\r\n              <!-- Displays commentLastEdited value only if it differs from commentCreatedAt        -->\r\n              <ng-container *ngIf=\"comment.commentLastEditedAt !== comment.commentCreatedAt\">\r\n              <i>. Last edited at: {{ comment.commentLastEditedAt | date:'yyyy-MM-dd HH:mm' }}</i>\r\n              </ng-container>\r\n            </p>\r\n            <p>{{ comment.commentBody }}</p>\r\n            <div>\r\n              <button  class=\"commentBtn\" >Edit</button>\r\n              <button class=\"commentBtn\">Delete</button>\r\n\r\n            </div>\r\n            <hr>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}