{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nconst _c0 = function (a1) {\n  return [\"/Thread/Thread\", a1];\n};\nfunction ThreadsComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"a\", 12)(2, \"div\", 13)(3, \"div\")(4, \"p\", 14)(5, \"b\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"b\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const thread_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(6, _c0, thread_r1.threadId));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(thread_r1.createdBy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 3, thread_r1.threadCreatedAt, \"yyyy-MM-dd HH:mm\"));\n  }\n}\nconst _c1 = function () {\n  return [\"link-active\"];\n};\nconst _c2 = function () {\n  return {\n    exact: true\n  };\n};\nconst _c3 = function () {\n  return [\"/\"];\n};\nconst _c4 = function () {\n  return [\"/threads\"];\n};\nexport class ThreadsComponent {\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredThreads = this.performFilter(value);\n  }\n  constructor(_http) {\n    this._http = _http;\n    this.viewTitle = 'Table';\n    this.threads = [];\n    this.users = [];\n    this._listFilter = '';\n    this.filteredThreads = this.threads;\n  }\n  getThreads() {\n    this._http.get('api/thread').subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.threads = data;\n      this.filteredThreads = this.threads;\n    });\n  }\n  getUsers() {\n    this._http.get('api/users').subscribe(data => {\n      console.log('All users', JSON.stringify(data));\n      this.users = data;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.threads.filter(thread => thread.ThreadTitle.toLocaleLowerCase().includes(filterBy));\n  }\n  ngOnInit() {\n    console.log('ThreadsComponent created');\n    this.getThreads();\n    this.getUsers();\n  }\n  // Placeholder for adding a comment\n  addComment() {\n    // Placeholder for adding a comment logic\n    console.log('Add Comment logic');\n  }\n  // Placeholder for editing a comment\n  editComment(commentId) {\n    // Placeholder for editing a comment logic\n    console.log(`Edit Comment logic for Comment ID: ${commentId}`);\n  }\n  // Placeholder for deleting a comment\n  deleteComment(commentId) {\n    // Placeholder for deleting a comment logic\n    console.log(`Delete Comment logic for Comment ID: ${commentId}`);\n  }\n}\nThreadsComponent.ɵfac = function ThreadsComponent_Factory(t) {\n  return new (t || ThreadsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadsComponent,\n  selectors: [[\"app-thread-component\"]],\n  decls: 25,\n  vars: 14,\n  consts: [[\"id\", \"tabelLabel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [\"class\", \"col-md-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"navbar-nav\", \"flex-grow\"], [1, \"nav-thread\", 3, \"routerLinkActive\", \"routerLinkActiveOptions\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"], [1, \"nav-item\", 3, \"routerLinkActive\"], [3, \"routerLink\"], [1, \"post\"], [1, \"thread-information\"]],\n  template: function ThreadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ThreadsComponent_Template_button_click_2_listener() {\n        return ctx.getThreads();\n      });\n      i0.ɵɵtext(3, \"Get Threads\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3);\n      i0.ɵɵtext(6, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function ThreadsComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"div\", 6)(11, \"h4\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(13, ThreadsComponent_div_13_Template, 10, 8, \"div\", 7);\n      i0.ɵɵelementStart(14, \"h3\");\n      i0.ɵɵtext(15, \"Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"p\");\n      i0.ɵɵtext(17, \" not implemented \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ul\", 8)(19, \"li\", 9)(20, \"a\", 10);\n      i0.ɵɵtext(21, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"li\", 11)(23, \"a\", 10);\n      i0.ɵɵtext(24, \" Threads \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Threads (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.threads);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(9, _c1))(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(10, _c2));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c3));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(12, _c1));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c4));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.RouterLink, i4.RouterLinkActive, i2.DatePipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","ThreadsComponent","listFilter","_listFilter","value","console","log","filteredThreads","performFilter","constructor","_http","threads","getThreads","get","subscribe","data","JSON","stringify","getUsers","users","filterBy","toLocaleLowerCase","filter","thread","ThreadTitle","includes","ngOnInit","addComment","editComment","commentId","deleteComment","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.html","C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.ts"],"sourcesContent":["<h1 id=\"tabelLabel\">List of Threads ({{viewTitle}} View)</h1>\r\n\r\n<button class='btn btn-primary' (click)=\"getThreads()\">Get Threads</button>\r\n\r\n<div class=\"row\">\r\n  <div class='col-md-2'>Filter by:</div>\r\n  <div class='col-md-4'>\r\n    <input type=\"text\" [(ngModel)]=\"listFilter\" />\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-6\">\r\n    <h4>Filtered by: {{listFilter}}</h4>\r\n  </div>\r\n</div>\r\n\r\n<div *ngFor=\"let thread of threads\" class=\"col-md-6\">\r\n  <a [routerLink]=\"['/Thread/Thread', thread.threadId]\">\r\n    <div class=\"post\">\r\n      <div>\r\n        <p class=\"thread-information\">\r\n          <b>{{ thread.createdBy }}</b>\r\n          <b>{{ thread.threadCreatedAt | date: 'yyyy-MM-dd HH:mm' }}</b>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </a>\r\n</div>\r\n\r\n\r\n\r\n<h3>Comments</h3>\r\n<p> not implemented </p>\r\n\r\n<!---\r\n<div *ngFor=\"let thread of threads\">\r\n  <ul>\r\n    <li class=\"thread\">\r\n      <p> Posted by: {{thread.createdBy}}</p>\r\n    </li>\r\n\r\n    <li *ngFor=\"let comment of thread.comments\">\r\n      <div class=\"comment\">\r\n        <p>Posted by: {{ comment?.User?.UserName }} on {{ comment?.CommentCreatedAt }}</p>\r\n        <p>{{ comment?.CommentBody }}</p>\r\n\r\n        <div *ngIf=\"UserId === comment?.User?.UserId || UserIsAdmin\">\r\n          <button (click)=\"editComment(comment?.CommentId)\">Edit Comment</button>\r\n          <button (click)=\"deleteComment(comment?.CommentId)\">Delete Comment</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</div>\r\n    -->\r\n\r\n<ul class=\"navbar-nav flex-grow\">\r\n  <li\r\n    class=\"nav-thread\"\r\n    [routerLinkActive]=\"['link-active']\"\r\n    [routerLinkActiveOptions]=\"{ exact: true}\"\r\n  >\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n  </li>\r\n  <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/threads']\">\r\n      Threads\r\n    </a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Thread } from './threads';\r\nimport { User } from '../users/users';\r\n\r\n@Component({\r\n  selector: 'app-thread-component',\r\n  templateUrl: './threads.component.html',\r\n  // styleUrls: ['./threads.component.css']\r\n})\r\n\r\nexport class ThreadsComponent implements OnInit {\r\n  viewTitle: string = 'Table';\r\n  threads: Thread[] = [];\r\n  users: User[] = [];\r\n\r\n  private _listFilter: string = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    console.log('In setter:', value);\r\n    this.filteredThreads = this.performFilter(value);\r\n  }\r\n\r\n  filteredThreads: Thread[] = this.threads;\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getThreads(): void {\r\n    this._http.get<Thread[]>('api/thread').subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      this.threads = data;\r\n      this.filteredThreads = this.threads;\r\n    });\r\n  }\r\n\r\n  getUsers(): void {\r\n    this._http.get<User[]>('api/users').subscribe(data => {\r\n      console.log('All users', JSON.stringify(data));\r\n      this.users = data;\r\n    });\r\n  }\r\n\r\n  performFilter(filterBy: string): Thread[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.threads.filter((thread: Thread) =>\r\n      thread.ThreadTitle.toLocaleLowerCase().includes(filterBy)\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('ThreadsComponent created');\r\n    this.getThreads();\r\n    this.getUsers();\r\n  }\r\n\r\n  // Placeholder for adding a comment\r\n  addComment() {\r\n    // Placeholder for adding a comment logic\r\n    console.log('Add Comment logic');\r\n  }\r\n\r\n  // Placeholder for editing a comment\r\n  editComment(commentId: number) {\r\n    // Placeholder for editing a comment logic\r\n    console.log(`Edit Comment logic for Comment ID: ${commentId}`);\r\n  }\r\n\r\n  // Placeholder for deleting a comment\r\n  deleteComment(commentId: number) {\r\n    // Placeholder for deleting a comment logic\r\n    console.log(`Delete Comment logic for Comment ID: ${commentId}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}