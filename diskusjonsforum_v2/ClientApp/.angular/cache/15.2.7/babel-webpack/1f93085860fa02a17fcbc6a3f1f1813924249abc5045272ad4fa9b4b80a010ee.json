{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nfunction ThreadsComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const thread_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Thread ID: \", thread_r3.ThreadId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Thread Title: \", thread_r3.ThreadTitle, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Thread Body: \", thread_r3.ThreadBody, \"\");\n  }\n}\nfunction ThreadsComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const thread_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Thread ID: \", thread_r4.ThreadId, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Thread Title: \", thread_r4.ThreadTitle, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Thread Body: \", thread_r4.ThreadBody, \"\");\n  }\n}\nfunction ThreadsComponent_li_22_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ThreadsComponent_li_22_div_6_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const comment_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editComment(comment_r5.CommentId));\n    });\n    i0.ɵɵtext(2, \"Edit Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ThreadsComponent_li_22_div_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const comment_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.deleteComment(comment_r5.CommentId));\n    });\n    i0.ɵɵtext(4, \"Delete Comment\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ThreadsComponent_li_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"div\", 13)(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ThreadsComponent_li_22_div_6_Template, 5, 0, \"div\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r5 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Posted by: \", comment_r5.User.UserName, \" on \", comment_r5.CommentCreatedAt, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r5.CommentBody);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.userId === comment_r5.UserId || ctx_r2.userIsAdmin);\n  }\n}\nconst _c0 = function () {\n  return [\"link-active\"];\n};\nconst _c1 = function () {\n  return {\n    exact: true\n  };\n};\nconst _c2 = function () {\n  return [\"/\"];\n};\nconst _c3 = function () {\n  return [\"/threads\"];\n};\nexport class ThreadsComponent {\n  constructor(_http) {\n    this._http = _http;\n    this.viewTitle = 'Table';\n    this.threads = [];\n    this._listFilter = '';\n    this.filteredThreads = this.threads;\n  }\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    console.log('In setter:', value);\n    this.filteredThreads = this.performFilter(value);\n  }\n  getThreads() {\n    this._http.get('api/thread').subscribe(data => {\n      console.log('All', JSON.stringify(data));\n      this.threads = data;\n      this.filteredThreads = this.threads;\n    });\n  }\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.threads.filter(thread => thread.ThreadTitle.toLocaleLowerCase().includes(filterBy));\n  }\n  ngOnInit() {\n    console.log('ThreadsComponent created');\n  }\n  // Function to add a comment\n  addComment() {\n    // Logic to add a comment\n  }\n}\nThreadsComponent.ɵfac = function ThreadsComponent_Factory(t) {\n  return new (t || ThreadsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nThreadsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadsComponent,\n  selectors: [[\"app-thread-component\"]],\n  decls: 30,\n  vars: 16,\n  consts: [[\"id\", \"tabelLabel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"aria-labelledby\", \"tabelLabel\", 1, \"table\", \"table-striped\"], [1, \"row\"], [1, \"col-md-2\"], [1, \"col-md-4\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [4, \"ngFor\", \"ngForOf\"], [1, \"navbar-nav\", \"flex-grow\"], [1, \"nav-thread\", 3, \"routerLinkActive\", \"routerLinkActiveOptions\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"], [1, \"nav-item\", 3, \"routerLinkActive\"], [1, \"comment\"], [4, \"ngIf\"], [3, \"click\"]],\n  template: function ThreadsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ThreadsComponent_Template_button_click_2_listener() {\n        return ctx.getThreads();\n      });\n      i0.ɵɵtext(3, \"Get Threads\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 2)(5, \"div\", 3)(6, \"div\", 4);\n      i0.ɵɵtext(7, \"Filter by:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function ThreadsComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.listFilter = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 7)(12, \"h4\");\n      i0.ɵɵtext(13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"h2\");\n      i0.ɵɵtext(15, \"Thread Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"table\");\n      i0.ɵɵtemplate(17, ThreadsComponent_tr_17_Template, 8, 3, \"tr\", 8);\n      i0.ɵɵtemplate(18, ThreadsComponent_tr_18_Template, 8, 3, \"tr\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"h3\");\n      i0.ɵɵtext(20, \"Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ul\");\n      i0.ɵɵtemplate(22, ThreadsComponent_li_22_Template, 7, 4, \"li\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"ul\", 9)(24, \"li\", 10)(25, \"a\", 11);\n      i0.ɵɵtext(26, \"Home\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"li\", 12)(28, \"a\", 11);\n      i0.ɵɵtext(29, \" Threads \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"List of Threads (\", ctx.viewTitle, \" View)\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.listFilter);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"Filtered by: \", ctx.listFilter, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.threads);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredThreads);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(11, _c0))(\"routerLinkActiveOptions\", i0.ɵɵpureFunction0(12, _c1));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c2));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLinkActive\", i0.ɵɵpureFunction0(14, _c0));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(15, _c3));\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.RouterLink, i3.RouterLinkActive],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","ThreadsComponent","constructor","_http","threads","listFilter","_listFilter","value","console","log","filteredThreads","performFilter","getThreads","get","subscribe","data","JSON","stringify","filterBy","toLocaleLowerCase","filter","thread","ThreadTitle","includes","ngOnInit","addComment","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.html","C:\\Users\\Eier\\RiderProjects\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.component.ts"],"sourcesContent":["<h1 id=\"tabelLabel\">List of Threads ({{viewTitle}} View)</h1>\r\n\r\n<button class='btn btn-primary' (click)=\"getThreads()\">Get Threads</button>\r\n\r\n<table class=\"table table-striped\" aria-labelledby=\"tabelLabel\">\r\n  <div class=\"row\">\r\n    <div class='col-md-2'>Filter by:</div>\r\n    <div class='col-md-4'>\r\n      <input type=\"text\" [(ngModel)]=\"listFilter\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h4>Filtered by: {{listFilter}}</h4>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <h2>Thread Details</h2>\r\n  <table>\r\n    <tr *ngFor=\"let thread of threads\" >\r\n    <td>\r\n      <p>Thread ID: {{ thread.ThreadId }}</p>\r\n      <p>Thread Title: {{ thread.ThreadTitle }}</p>\r\n      <p>Thread Body: {{ thread.ThreadBody }}</p>\r\n    </td>\r\n    </tr>\r\n      <tr *ngFor=\"let thread of filteredThreads\">\r\n        <td>\r\n          <p>Thread ID: {{ thread.ThreadId }}</p>\r\n          <p>Thread Title: {{ thread.ThreadTitle }}</p>\r\n          <p>Thread Body: {{ thread.ThreadBody }}</p>\r\n        </td>\r\n      </tr>\r\n  </table>\r\n\r\n  <h3>Comments</h3>\r\n  <ul>\r\n    <li *ngFor=\"let comment of comments\">\r\n      <div class=\"comment\">\r\n        <p>Posted by: {{ comment.User.UserName }} on {{ comment.CommentCreatedAt }}</p>\r\n        <p>{{ comment.CommentBody }}</p>\r\n\r\n        <div *ngIf=\"userId === comment.UserId || userIsAdmin\">\r\n          <button (click)=\"editComment(comment.CommentId)\">Edit Comment</button>\r\n          <button (click)=\"deleteComment(comment.CommentId)\">Delete Comment</button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  </ul>\r\n</table>\r\n\r\n<ul class=\"navbar-nav flex-grow\">\r\n  <li\r\n    class=\"nav-thread\"\r\n    [routerLinkActive]=\"['link-active']\"\r\n    [routerLinkActiveOptions]=\"{ exact: true}\"\r\n    >\r\n      <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n  </li>\r\n  <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/threads']\">\r\n      Threads\r\n    </a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {TThread} from './threads';\r\n\r\n@Component({\r\n  selector: 'app-thread-component',\r\n  templateUrl: './threads.component.html',\r\n  //styleUrls: ['./threads.component.css']\r\n})\r\n\r\nexport class ThreadsComponent implements OnInit{\r\n  viewTitle: string = 'Table';\r\n  threads: TThread[] = [];\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n\r\n  private _listFilter: string = '';\r\n  get listFilter(): string{\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string){\r\n    this._listFilter = value;\r\n    console.log('In setter:', value);\r\n    this.filteredThreads = this.performFilter(value);\r\n  }\r\n\r\n  getThreads(): void{\r\n    this._http.get<TThread[]>('api/thread').subscribe(data => {\r\n      console.log('All', JSON.stringify(data));\r\n      this.threads = data;\r\n      this.filteredThreads = this.threads;\r\n    });\r\n  }\r\n\r\n  filteredThreads: TThread[] = this.threads;\r\n\r\n  performFilter(filterBy: string): TThread[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.threads.filter((thread: TThread) =>\r\n    thread.ThreadTitle.toLocaleLowerCase().includes(filterBy));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    console.log('ThreadsComponent created')\r\n  }\r\n\r\n  // Function to add a comment\r\n  addComment() {\r\n    // Logic to add a comment\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}