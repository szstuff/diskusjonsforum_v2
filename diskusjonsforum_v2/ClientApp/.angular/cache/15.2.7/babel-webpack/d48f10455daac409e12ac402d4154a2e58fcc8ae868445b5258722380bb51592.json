{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./threads.service\";\nimport * as i3 from \"@angular/common\";\nfunction ThreadViewComponent_div_0_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r2.commentBody);\n  }\n}\nfunction ThreadViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h3\");\n    i0.ɵɵtext(8, \"Comments\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, ThreadViewComponent_div_0_div_9_Template, 3, 1, \"div\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.thread.threadTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Created by: \", ctx_r0.thread.createdBy, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.thread.threadBody);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.thread.threadComments);\n  }\n}\nexport class ThreadViewComponent {\n  // provides ActivatedRoute and ThreadService as route and threadservice\n  constructor(route, threadService) {\n    this.route = route;\n    this.threadService = threadService;\n    this.thread = {}; //initialise thread object\n  }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      // @ts-ignore, thread ID will not be null\n      const threadId = +params.get('id');\n      // gets details on the corresponding thread by using \"this.threadService\" and\n      // updates the property in the component of \"thread\" with this.thread\n      this.threadService.getThread(threadId).subscribe(thread => {\n        this.thread = thread;\n      });\n    });\n  }\n}\nThreadViewComponent.ɵfac = function ThreadViewComponent_Factory(t) {\n  return new (t || ThreadViewComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ThreadService));\n};\nThreadViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ThreadViewComponent,\n  selectors: [[\"app-thread-view\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ThreadViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ThreadViewComponent_div_0_Template, 10, 4, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.thread);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAMEA,2BAAmD;IAC9CA,YAAyB;IAAAA,iBAAI;;;;IAA7BA,eAAyB;IAAzBA,4CAAyB;;;;;IAPhCA,2BAAoB;IACdA,YAAwB;IAAAA,iBAAK;IACjCA,yBAAG;IAAAA,YAAkC;IAAAA,iBAAI;IACzCA,yBAAG;IAAAA,YAAuB;IAAAA,iBAAI;IAE9BA,0BAAI;IAAAA,wBAAQ;IAAAA,iBAAK;IACjBA,0EAGM;IACRA,iBAAM;;;;IATAA,eAAwB;IAAxBA,+CAAwB;IACzBA,eAAkC;IAAlCA,kEAAkC;IAClCA,eAAuB;IAAvBA,8CAAuB;IAGDA,eAAwB;IAAxBA,sDAAwB;;;ACKnD,OAAM,MAAOC,mBAAmB;EAG9B;EACAC,YAAoBC,KAAqB,EAAUC,aAA4B;IAA3D,UAAK,GAALD,KAAK;IAA0B,kBAAa,GAAbC,aAAa;IAHhE,WAAM,GAAW,EAAY,CAAC,CAAC;EAGoD;;EAEnFC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAG;MACrC;MACA,MAAMC,QAAQ,GAAG,CAACD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;MAClC;MACA;MACA,IAAI,CAACN,aAAa,CAACO,SAAS,CAACF,QAAQ,CAAC,CAACF,SAAS,CAACK,MAAM,IAAG;QACxD,IAAI,CAACA,MAAM,GAAGA,MAAM;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAhBWX,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXhCjB,qEAUM;;;MAVAA,iCAAY","names":["i0","ThreadViewComponent","constructor","route","threadService","ngOnInit","paramMap","subscribe","params","threadId","get","getThread","thread","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\thread-view.component.html","C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\thread-view.component.ts"],"sourcesContent":["<div *ngIf=\"thread\">\r\n  <h2>{{ thread.threadTitle }}</h2>\r\n  <p>Created by: {{ thread.createdBy }}</p>\r\n  <p>{{ thread.threadBody }}</p>\r\n\r\n  <h3>Comments</h3>\r\n  <div *ngFor=\"let comment of thread.threadComments\">\r\n    <p>{{ comment.commentBody }}</p>\r\n\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ThreadsComponent } from './threads.component';\r\nimport { ThreadService } from './threads.service';\r\nimport {Thread} from \"./threads\";\r\n\r\n@Component({\r\n  selector: 'app-thread-view', // custom HTML tag\r\n  templateUrl: './thread-view.component.html', // path to the template\r\n  //styleUrls: ['./thread-view.component.css']\r\n})\r\nexport class ThreadViewComponent implements OnInit {\r\n  thread: Thread = {} as Thread; //initialise thread object\r\n\r\n  // provides ActivatedRoute and ThreadService as route and threadservice\r\n  constructor(private route: ActivatedRoute, private threadService: ThreadService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      // @ts-ignore, thread ID will not be null\r\n      const threadId = +params.get('id');\r\n      // gets details on the corresponding thread by using \"this.threadService\" and\r\n      // updates the property in the component of \"thread\" with this.thread\r\n      this.threadService.getThread(threadId).subscribe(thread => {\r\n        this.thread = thread;\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}