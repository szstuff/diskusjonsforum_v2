{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NavMenuService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/threads';\n  }\n  searchThreads(searchTerm) {\n    const url = `${this.apiUrl}/search?searchQuery=${searchTerm}`;\n    return this._http.get(url);\n  }\n  getThreads() {\n    return this._http.get(`${this.apiUrl}/getall`);\n  }\n}\nNavMenuService.ɵfac = function NavMenuService_Factory(t) {\n  return new (t || NavMenuService)(i0.ɵɵinject(i1.HttpClient));\n};\nNavMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NavMenuService,\n  factory: NavMenuService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAGzBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IAFjB,WAAM,GAAG,aAAa;EAEU;EAExCC,aAAa,CAACC,UAAkB;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,MAAM,uBAAuBF,UAAU,EAAE;IAC7D,OAAO,IAAI,CAACF,KAAK,CAACK,GAAG,CAAMF,GAAG,CAAC;EACjC;EAEAG,UAAU;IACR,OAAO,IAAI,CAACN,KAAK,CAACK,GAAG,CAAW,GAAG,IAAI,CAACD,MAAM,SAAS,CAAC;EAC1D;;AAZWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["NavMenuService","constructor","_http","searchThreads","searchTerm","url","apiUrl","get","getThreads","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\nav-menu\\nav-menu.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Thread } from '../threads/threads';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavMenuService {\n  private apiUrl = 'api/threads';\n\n  constructor(private _http: HttpClient) {}\n\n  searchThreads(searchTerm: string): Observable<any> {\n    const url = `${this.apiUrl}/search?searchQuery=${searchTerm}`;\n    return this._http.get<any>(url);\n  }\n\n  getThreads(): Observable<Thread[]> {\n    return this._http.get<Thread[]>(`${this.apiUrl}/getall`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}