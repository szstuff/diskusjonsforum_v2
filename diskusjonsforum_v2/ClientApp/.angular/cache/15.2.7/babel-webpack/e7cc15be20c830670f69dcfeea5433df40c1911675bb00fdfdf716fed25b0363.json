{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ThreadService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/threads';\n  }\n  getThreads() {\n    return this._http.get(this.apiUrl);\n  }\n  createThread(newThread) {\n    const createUrl = 'api/thread/create';\n    return this._http.post(createUrl, newThread);\n  }\n}\nThreadService.ɵfac = function ThreadService_Factory(t) {\n  return new (t || ThreadService)(i0.ɵɵinject(i1.HttpClient));\n};\nThreadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ThreadService,\n  factory: ThreadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADjB,WAAM,GAAG,aAAa;EACU;EAExCC,UAAU;IACR,OAAO,IAAI,CAACD,KAAK,CAACE,GAAG,CAAW,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,YAAY,CAACC,SAAiB;IAC5B,MAAMC,SAAS,GAAG,mBAAmB;IACrC,OAAO,IAAI,CAACN,KAAK,CAACO,IAAI,CAAMD,SAAS,EAAED,SAAS,CAAC;EACnD;;AAXWP,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAU,SAAbV,aAAa;EAAAW,YAHZ;AAAM","names":["ThreadService","constructor","_http","getThreads","get","apiUrl","createThread","newThread","createUrl","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\threads\\threads.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Thread } from \"./threads\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class ThreadService {\r\n  private apiUrl = 'api/threads';\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  getThreads(): Observable<Thread[]> {\r\n    return this._http.get<Thread[]>(this.apiUrl);\r\n  }\r\n\r\n  createThread(newThread: Thread): Observable<any> {\r\n    const createUrl = 'api/thread/create';\r\n    return this._http.post<any>(createUrl, newThread);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}