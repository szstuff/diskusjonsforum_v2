{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./comments.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction CommentformComponent_tr_3_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CommentformComponent_tr_3_div_9_div_2_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const childComment_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.editComment(childComment_r4.commentId));\n    });\n    i0.ɵɵtext(6, \"Edit Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CommentformComponent_tr_3_div_9_div_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const childComment_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r7.deleteComment(childComment_r4.commentId));\n    });\n    i0.ɵɵtext(8, \"Delete Comment\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const childComment_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Created at \", childComment_r4.commentCreatedAt, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(childComment_r4.commentBody);\n  }\n}\nfunction CommentformComponent_tr_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 5);\n    i0.ɵɵtemplate(2, CommentformComponent_tr_3_div_9_div_2_Template, 9, 2, \"div\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", comment_r1.childComments);\n  }\n}\nfunction CommentformComponent_tr_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CommentformComponent_tr_3_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.editComment(comment_r1.commentId));\n    });\n    i0.ɵɵtext(6, \"Edit Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function CommentformComponent_tr_3_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.deleteComment(comment_r1.commentId));\n    });\n    i0.ɵɵtext(8, \"Delete Comment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, CommentformComponent_tr_3_div_9_Template, 3, 1, \"div\", 4);\n    i0.ɵɵelementStart(10, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function CommentformComponent_tr_3_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.navigateToCommentform(comment_r1));\n    });\n    i0.ɵɵtext(11, \"Create New Thread\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Created at \", comment_r1.commentCreatedAt, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.commentBody);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", comment_r1.childComments && comment_r1.childComments.length > 0);\n  }\n}\nexport class CommentformComponent {\n  constructor(_formBuilder, _router, _route, _commentService, _http) {\n    this._formBuilder = _formBuilder;\n    this._router = _router;\n    this._route = _route;\n    this._commentService = _commentService;\n    this._http = _http;\n    this.commentForm = _formBuilder.group({\n      comment: ['', Validators.required],\n      body: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this._route.queryParams.subscribe(params => {\n      this.commentId = params['commentId'] ? +params['commentId'] : undefined;\n    });\n  }\n  onSubmit() {\n    console.log(\"CommentCreate form submitted:\");\n    console.log(this.commentForm);\n    console.log(this.commentForm.touched);\n    const newComment = this.commentForm.value;\n    if (this.commentId !== undefined) {\n      newComment.commentId = this.commentId;\n    }\n    const createUrl = \"api/comment/create\";\n    this._commentService.createComment(newComment).subscribe(response => {\n      if (response.success) {\n        console.log(response.message);\n        this._router.navigate([\"/comments\"]);\n      } else {\n        console.log(\"Comment failed\");\n      }\n    });\n  }\n  backToThreads() {\n    this._router.navigate([\"/threads\"]);\n  }\n}\nCommentformComponent.ɵfac = function CommentformComponent_Factory(t) {\n  return new (t || CommentformComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CommentsService), i0.ɵɵdirectiveInject(i4.HttpClient));\n};\nCommentformComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CommentformComponent,\n  selectors: [[\"app-comments-commentform\"]],\n  decls: 6,\n  vars: 1,\n  consts: [[\"id\", \"tabelLabel\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"click\"], [4, \"ngIf\"], [1, \"child-comments\"], [\"class\", \"comment-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"comment-item\"]],\n  template: function CommentformComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\", 0);\n      i0.ɵɵtext(1, \"List of Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\");\n      i0.ɵɵtemplate(3, CommentformComponent_tr_3_Template, 12, 3, \"tr\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function CommentformComponent_Template_button_click_4_listener() {\n        return ctx.navigateToCommentform();\n      });\n      i0.ɵɵtext(5, \"Create New Thread\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","CommentformComponent","constructor","_formBuilder","_router","_route","_commentService","_http","commentForm","group","comment","required","body","ngOnInit","queryParams","subscribe","params","commentId","undefined","onSubmit","console","log","touched","newComment","value","createUrl","createComment","response","success","message","navigate","backToThreads","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\commentform.component.ts","C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\comments.component.html"],"sourcesContent":["import {Component} from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport { CommentsService} from \"./comments.service\";\r\n\r\n@Component({\r\n  selector: \"app-comments-commentform\",\r\n  templateUrl: \"./comments.component.html\"\r\n})\r\n\r\nexport class CommentformComponent{\r\n  commentForm: FormGroup;\r\n  commentId: number | undefined;\r\n\r\n  constructor(\r\n    private _formBuilder: FormBuilder,\r\n    private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private _commentService: CommentsService,\r\n    private _http: HttpClient\r\n  ) {\r\n    this.commentForm = _formBuilder.group({\r\n      comment: ['', Validators.required],\r\n      body: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._route.queryParams.subscribe(params => {\r\n      this.commentId = params['commentId'] ? +params['commentId'] : undefined;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    console.log(\"CommentCreate form submitted:\");\r\n    console.log(this.commentForm);\r\n    console.log(this.commentForm.touched);\r\n    const newComment = this.commentForm.value;\r\n\r\n    if (this.commentId !== undefined){\r\n      newComment.commentId = this.commentId;\r\n    }\r\n    const createUrl = \"api/comment/create\";\r\n    this._commentService.createComment(newComment).subscribe(response => {\r\n      if (response.success){\r\n        console.log(response.message);\r\n        this._router.navigate([\"/comments\"]);\r\n      }\r\n      else {\r\n        console.log(\"Comment failed\");\r\n      }\r\n    })\r\n  };\r\n\r\n  backToThreads(){\r\n    this._router.navigate([\"/threads\"]);\r\n  }\r\n\r\n}\r\n","<h2 id=\"tabelLabel\">List of Comments</h2>\r\n\r\n<table>\r\n  <tr *ngFor=\"let comment of comments\">\r\n    <p>Created at {{ comment.commentCreatedAt }}</p>\r\n    <p>{{ comment.commentBody }}</p>\r\n     <button (click)=\"editComment(comment.commentId)\">Edit Comment</button>\r\n      <button (click)=\"deleteComment(comment.commentId)\">Delete Comment</button>\r\n\r\n    <div *ngIf=\"comment.childComments && comment.childComments.length > 0\">\r\n      <div class=\"child-comments\">\r\n        <div *ngFor=\"let childComment of comment.childComments\" class=\"comment-item\">\r\n          <p>Created at {{ childComment.commentCreatedAt }}</p>\r\n          <p>{{ childComment.commentBody }}</p>\r\n\r\n            <button (click)=\"editComment(childComment.commentId)\">Edit Comment</button>\r\n            <button (click)=\"deleteComment(childComment.commentId)\">Delete Comment</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    <!-- Button Inside the Loop (Create New Thread for Each Comment) -->\r\n    <button class=\"btn btn-primary\" (click)=\"navigateToCommentform(comment)\">Create New Thread</button>\r\n  </tr>\r\n</table>\r\n\r\n<!-- Single Button for Creating a New Thread (Outside the Loop) -->\r\n<button class=\"btn btn-primary\" (click)=\"navigateToCommentform()\">Create New Thread</button>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}