{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CommentsService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'api/comments'; // navigates to the API endpoints for comments\n  }\n\n  getCommentsByThreadId(parentThreadId) {\n    return this._http.get(`${this.apiUrl}/getByThread/${parentThreadId}`);\n  }\n  //creates a new comment\n  createComment(newComment) {\n    const url = `${this.apiUrl}/create`;\n    return this._http.post(url, newComment);\n  }\n  // updates the comment\n  updateComment(comment) {\n    const url = `${this.apiUrl}/update/${comment.commentId}`;\n    return this._http.put(url, comment);\n  }\n  // deletes comment by commentID\n  deleteComment(commentId) {\n    const url = `${this.apiUrl}/delete/${commentId}`;\n    return this._http.delete(url);\n  }\n}\nCommentsService.ɵfac = function CommentsService_Factory(t) {\n  return new (t || CommentsService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommentsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommentsService,\n  factory: CommentsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;IADjB,WAAM,GAAG,cAAc,CAAC,CAAC;EACQ;;EAEzCC,qBAAqB,CAACC,cAAsB;IAC1C,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,gBAAgBF,cAAc,EAAE,CAAC;EAClF;EAEA;EACAG,aAAa,CAACC,UAAmB;IAC/B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,SAAS;IACnC,OAAO,IAAI,CAACJ,KAAK,CAACQ,IAAI,CAAOD,GAAG,EAAED,UAAU,CAAC;EAC/C;EAEA;EACAG,aAAa,CAACC,OAAgB;IAC5B,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWM,OAAO,CAACC,SAAS,EAAE;IACxD,OAAO,IAAI,CAACX,KAAK,CAACY,GAAG,CAAML,GAAG,EAAEG,OAAO,CAAC;EAC1C;EAEA;EACAG,aAAa,CAACF,SAAiB;IAC7B,MAAMJ,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,WAAWO,SAAS,EAAE;IAChD,OAAO,IAAI,CAACX,KAAK,CAACc,MAAM,CAAMP,GAAG,CAAC;EACpC;;AAxBWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAiB,SAAfjB,eAAe;EAAAkB,YAFd;AAAM","names":["CommentsService","constructor","_http","getCommentsByThreadId","parentThreadId","get","apiUrl","createComment","newComment","url","post","updateComment","comment","commentId","put","deleteComment","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\jenny\\source\\repos\\szstuff\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\app\\comments\\comments.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable} from \"rxjs\";\r\nimport {Comment} from \"./comments\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n  private apiUrl = 'api/comments'; // navigates to the API endpoints for comments\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getCommentsByThreadId(parentThreadId: number): Observable<Comment[]> {\r\n    return this._http.get<Comment[]>(`${this.apiUrl}/getByThread/${parentThreadId}`);\r\n  }\r\n\r\n  //creates a new comment\r\n  createComment(newComment: Comment):Observable<any>{\r\n    const url = `${this.apiUrl}/create`;\r\n    return this._http.post<void>(url, newComment);\r\n  }\r\n\r\n  // updates the comment\r\n  updateComment(comment: Comment): Observable<any> {\r\n    const url = `${this.apiUrl}/update/${comment.commentId}`;\r\n    return this._http.put<any>(url, comment);\r\n  }\r\n\r\n  // deletes comment by commentID\r\n  deleteComment(commentId: number): Observable<any> {\r\n    const url = `${this.apiUrl}/delete/${commentId}`;\r\n    return this._http.delete<any>(url);\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}