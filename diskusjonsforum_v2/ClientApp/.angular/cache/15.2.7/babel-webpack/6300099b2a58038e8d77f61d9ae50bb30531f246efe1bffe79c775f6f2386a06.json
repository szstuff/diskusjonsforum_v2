{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n// gets the URL from the HTML tag 'base'\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\n// dependency injection gets configurated\nconst providers = [{\n  provide: 'BASE_URL',\n  useFactory: getBaseUrl,\n  deps: []\n}];\n// checks if the enviroment is set\nif (environment.production) {\n  // enable production mode if it is in production\n  enableProdMode();\n}\n// bootstraps the angular application\n__NgCli_bootstrap_1.platformBrowser(providers).bootstrapModule(AppModule).catch(err => console.log(err)); // error handling","map":{"version":3,"mappings":";AAAA,SAASA,cAAc,QAAQ,eAAe;AAG9C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,4BAA4B;AACxD;AACA,OAAM,SAAUC,UAAU;EACxB,OAAOC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI;AACtD;AAEA;AACA,MAAMC,SAAS,GAAG,CAChB;EAAEC,OAAO,EAAE,UAAU;EAAEC,UAAU,EAAEN,UAAU;EAAEO,IAAI,EAAE;AAAE,CAAE,CAC1D;AAED;AACA,IAAIR,WAAW,CAACS,UAAU,EAAE;EAC1B;EACAX,cAAc,EAAE;;AAGlB;AACAY,oCAAuBL,SAAS,CAAC,CAACM,eAAe,CAACZ,SAAS,CAAC,CACzDa,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,CAAC","names":["enableProdMode","AppModule","environment","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","production","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","log"],"sourceRoot":"","sources":["C:\\Users\\Jovia\\Documents\\OsloMet\\5 semester\\ITPE3200 - Angular Eksamen\\diskusjonsforum_v2\\diskusjonsforum_v2\\ClientApp\\src\\main.ts"],"sourcesContent":["import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n// gets the URL from the HTML tag 'base'\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\n// dependency injection gets configurated\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\n// checks if the enviroment is set\r\nif (environment.production) {\r\n  // enable production mode if it is in production\r\n  enableProdMode();\r\n}\r\n\r\n// bootstraps the angular application\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err)); // error handling\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}